warning: some crates are on edition 2021 which defaults to `resolver = "2"`, but virtual workspaces default to `resolver = "1"`
note: to keep the current resolver, specify `workspace.resolver = "1"` in the workspace root's manifest
note: to use the edition 2021 resolver, specify `workspace.resolver = "2"` in the workspace root's manifest
   Compiling mini-ledger-core v0.8.0 (/Users/franziskus/repos/mini-ledger/src/mini_ledger_core)
error: [GenericBounds]: [no_bound_vars] failed
  --> src/mini_ledger_core/src/balances.rs:18:12
   |
18 |         F: FnMut(Option<&Tokens>) -> Result<Tokens, E>;
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: [GenericBounds]: [no_bound_vars] failed
  --> src/mini_ledger_core/src/balances.rs:18:38
   |
18 |         F: FnMut(Option<&Tokens>) -> Result<Tokens, E>;
   |                                      ^^^^^^^^^^^^^^^^^

error[HAX0001]: AST import:something is not implemented yet.
                Slice
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[HAX0001]: AST import:something is not implemented yet.
                type Dynamic
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[HAX0001]: AST import:something is not implemented yet.
                Slice
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[HAX0001]: AST import:something is not implemented yet.
                type Dynamic
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[HAX0001]: AST import:something is not implemented yet.
                Slice
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[HAX0001]: AST import:something is not implemented yet.
                type Dynamic
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/balances.rs:16:5
   |
16 | /     fn update<F, E>(&mut self, acc: AccountId, action_on_acc: F) -> Result<Tokens, E>
17 | |     where
18 | |         F: FnMut(Option<&Tokens>) -> Result<Tokens, E>;
   | |_______________________________________________________^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/balances.rs:26:5
   |
26 | /     fn update<F, E>(&mut self, k: AccountId, mut f: F) -> Result<Tokens, E>
27 | |     where
28 | |         F: FnMut(Option<&Tokens>) -> Result<Tokens, E>, // TODO[FK]: FnMut is disallowed - this can be rewritten
29 | |     {
...  |
47 | |         }
48 | |     }
   | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/balances.rs:94:5
    |
94  | /     pub fn transfer(
95  | |         &mut self, // TODO[FK]: not allowed for now but will be in the future
96  | |         from: &AccountId,
97  | |         to: &AccountId,
...   |
112 | |         Ok(())
113 | |     }
    | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/balances.rs:115:5
    |
115 | /     pub fn burn(&mut self, from: &AccountId, amount: Tokens) -> Result<(), BalanceError> {
116 | |         self.debit(from, amount)?;
117 | |         self.token_pool += amount;
118 | |         Ok(())
119 | |     }
    | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/balances.rs:121:5
    |
121 | /     pub fn mint(&mut self, to: &AccountId, amount: Tokens) -> Result<(), BalanceError> {
122 | |         self.token_pool = (self.token_pool - amount).expect("total token supply exceeded"); // XXX: why not return an error?
123 | |         self.credit(to, amount);
124 | |         Ok(())
125 | |     }
    | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/balances.rs:129:5
    |
129 | /     pub fn debit(&mut self, from: &AccountId, amount: Tokens) -> Result<Tokens, BalanceError> {
130 | |         self.store.update(from.clone(), |prev| {
131 | |             let mut balance = match prev {
132 | |                 Some(x) => *x,
...   |
145 | |         })
146 | |     }
    | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/balances.rs:150:5
    |
150 | /     pub fn credit(&mut self, to: &AccountId, amount: Tokens) {
151 | |         self.store
152 | |             .update(
153 | |                 to.clone(),
...   |
162 | |             .unwrap();
163 | |     }
    | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/block.rs:65:22
   |
65 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
   |                      ^^^^^^^^^^^^^^^^^^^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/block.rs:116:44
    |
116 |             fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/tokens.rs:136:5
    |
136 | /     fn add_assign(&mut self, other: Self) {
137 | |         *self = (*self + other).expect("+= panicked");
138 | |     }
    | |_____^

error[HAX0003]: RefMut:The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/tokens.rs:156:5
    |
156 | /     fn sub_assign(&mut self, other: Self) {
157 | |         *self = (*self - other).expect("-= panicked");
158 | |     }
    | |_____^

note: Writing file "/Users/franziskus/repos/mini-ledger/src/mini_ledger_core/proofs/fstar/extraction/Mini_ledger_core.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/src/mini_ledger_core/proofs/fstar/extraction/Mini_ledger_core.Balances.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/src/mini_ledger_core/proofs/fstar/extraction/Mini_ledger_core.Block.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/src/mini_ledger_core/proofs/fstar/extraction/Mini_ledger_core.Timestamp.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/src/mini_ledger_core/proofs/fstar/extraction/Mini_ledger_core.Tokens.fst"

error: could not compile `mini-ledger-core` (lib) due to 22 previous errors
