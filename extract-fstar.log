   Compiling mini-ledger-core v0.8.0 (/Users/franziskus/repos/mini-ledger/src/mini_ledger_core)
error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               TODO node: Val(
                   Slice {
                       data: ConstAllocation { .. },
                       start: 0,
                       end: 5,
                   },
                   &str,
               )
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               Slice
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               type Dynamic
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               TODO node: Val(
                   Slice {
                       data: ConstAllocation { .. },
                       start: 0,
                       end: 15,
                   },
                   &str,
               )
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               Slice
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               type Dynamic
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               TODO node: Val(
                   Slice {
                       data: ConstAllocation { .. },
                       start: 0,
                       end: 3,
                   },
                   &str,
               )
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               Slice
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[CE0001]: Diagnostics.Context.ThirImport: something is not implemented yet.
               type Dynamic
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[CE0003]: The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/balances.rs:16:5
   |
16 | /     fn update<F, E>(&mut self, acc: AccountId, action_on_acc: F) -> Result<Tokens, E>
17 | |     where
18 | |         F: FnMut(Option<&Tokens>) -> Result<Tokens, E>;
   | |_______________________________________________________^

error[CE0008]: (Diagnostics.Context.Phase (Reject ArbitraryLhs)): ExplicitRejection { reason: "unknown reason" }
  --> src/mini_ledger_core/src/balances.rs:34:21
   |
34 |                     *entry.get_mut() = new_v; // XXX: Why not use insert?
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^

error[CE0003]: The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/balances.rs:60:21
   |
60 | #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq)] // XXX: ignore and assume implementations exist
   |                     ^^^^^^^^^^^

error[CE0008]: (Diagnostics.Context.Phase (Reject ArbitraryLhs)): ExplicitRejection { reason: "unknown reason" }
   --> src/mini_ledger_core/src/balances.rs:122:9
    |
122 |         self.token_pool = (self.token_pool - amount).expect("total token supply exceeded"); // XXX: why not return an error?
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[CE0003]: The mutation of this &mut is not allowed here.
  --> src/mini_ledger_core/src/block.rs:65:22
   |
65 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
   |                      ^^^^^^^^^^^^^^^^^^^

error[CE0003]: The mutation of this &mut is not allowed here.
   --> src/mini_ledger_core/src/block.rs:116:44
    |
116 |             fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^

error[CE0003]: The mutation of this &mut is not allowed here.
 --> src/mini_ledger_core/src/timestamp.rs:9:48
  |
9 |     Debug, Clone, Copy, CandidType, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash,
  |                                                ^^^^^^^^^^^

error[CE0003]: The mutation of this &mut is not allowed here.
 --> src/mini_ledger_core/src/tokens.rs:7:5
  |
7 |     Deserialize,
  |     ^^^^^^^^^^^

error[CE0008]: (Diagnostics.Context.Phase (Reject ArbitraryLhs)): ExplicitRejection { reason: "unknown reason" }
   --> src/mini_ledger_core/src/tokens.rs:137:9
    |
137 |         *self = (*self + other).expect("+= panicked");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[CE0008]: (Diagnostics.Context.Phase (Reject ArbitraryLhs)): ExplicitRejection { reason: "unknown reason" }
   --> src/mini_ledger_core/src/tokens.rs:157:9
    |
157 |         *self = (*self - other).expect("-= panicked");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[CE0001]: (Diagnostics.Context.Backend FStar): something is not implemented yet.
               anonymous impl
  --> src/mini_ledger_core/src/block.rs:39:1
   |
39 | / impl<T> HashOf<T> {
40 | |     pub fn into_bytes(self) -> [u8; HASH_LENGTH] {
41 | |         self.inner
42 | |     }
...  |
61 | |     }
62 | | }
   | |_^

error[CE0001]: (Diagnostics.Context.Backend FStar): something is not implemented yet.
               anonymous impl
   --> src/mini_ledger_core/src/block.rs:168:1
    |
168 | / impl EncodedBlock {
169 | |     pub fn from_vec(bytes: Vec<u8>) -> Self {
170 | |         Self(ByteBuf::from(bytes))
171 | |     }
...   |
183 | |     }
184 | | }
    | |_^

error[CE0001]: (Diagnostics.Context.Backend FStar): something is not implemented yet.
               anonymous impl
  --> src/mini_ledger_core/src/timestamp.rs:15:1
   |
15 | / impl TimeStamp {
16 | |     pub fn new(secs: u64, nanos: u32) -> Self {
17 | |         assert!(nanos < 1_000_000_000);
18 | |         Self {
...  |
31 | |     }
32 | | }
   | |_^

error[CE0001]: (Diagnostics.Context.Backend FStar): something is not implemented yet.
               anonymous impl
   --> src/mini_ledger_core/src/tokens.rs:29:1
    |
29  | / impl Tokens {
30  | |     /// The maximum value of this construct is 2^64-1 E8s or Roughly 184
31  | |     /// Billion Tokens
32  | |     pub const MAX: Self = Tokens { e8s: u64::MAX };
...   |
115 | |     }
116 | | }
    | |_^

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Balances.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Balances._.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Balances._.Deserialize.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Block.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Block._.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Block.Deserialize.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Timestamp.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Timestamp._.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Timestamp._.Deserialize.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Tokens.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Tokens._.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Tokens._.Deserialize.fst"

note: Writing file "/Users/franziskus/repos/mini-ledger/out/Mini_ledger_core.Tokens.New.fst"

error: could not compile `mini-ledger-core` due to 23 previous errors
