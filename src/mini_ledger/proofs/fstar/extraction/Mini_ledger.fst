module Mini_ledger
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core

let v_LEDGER: Std.Thread.Local.t_LocalKey (Core.Cell.t_RefCell (Core.Option.t_Option t_Ledger)) =
  Rust_primitives.Hax.failure ""
    "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Pointer {cast = Types.ReifyFnPointer;\n                   source =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.krate = \"mini_ledger\";\n                         path =\n                         [{ Types.data = (Types.ValueNs \"LEDGER\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"__getit\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          Types.Remapped {\n                            local_path =\n                            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                            virtual_name =\n                            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                       hi = { Types.col = \"53\"; line = \"108\" };\n                       lo = { Types.col = \"46\"; line = \"108\" } };\n                     ty =\n                     Types.Arrow {\n                       params =\n                       [Types.Adt {\n                          def_id =\n                          { Types.krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"option\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Option\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type\n                              (Types.Ref\n                                 (Types.Region {todo = \"ReErased\"},\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"option\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"Option\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"cell\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"RefCell\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"option\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Option\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args =\n                                                [(Types.Type\n                                                    Types.Adt {\n                                                      def_id =\n                                                      { Types.krate =\n                                                        \"mini_ledger\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"Ledger\");\n                                                           disambiguator = 0\n                                                           }\n                                                          ]\n                                                        };\n                                                      generic_args = []})\n                                                  ]})\n                                            ]})\n                                      ]},\n                                  true)))\n                            ]}\n                         ];\n                       ret =\n                       Types.Adt {\n                         def_id =\n                         { Types.krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             (Types.Ref\n                                (Types.Region {todo = \"ReStatic\"},\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"cell\");\n                                        disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"RefCell\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"option\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Option\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.krate = \"mini_ledger\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"Ledger\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = []})\n                                           ]})\n                                     ]},\n                                 false)))\n                           ]}}\n                     }};\n                 hir_id = (Some (\"45\", \"22\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      Types.Remapped {\n                        local_path =\n                        (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                        virtual_name =\n                        \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                   hi = { Types.col = \"53\"; line = \"108\" };\n                   lo = { Types.col = \"46\"; line = \"108\" } };\n                 ty =\n                 Types.Arrow {\n                   params =\n                   [Types.Adt {\n                      def_id =\n                      { Types.krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"option\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Option\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          (Types.Ref\n                             (Types.Region {todo = \"ReErased\"},\n                              Types.Adt {\n                                def_id =\n                                { Types.krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"option\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Option\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"cell\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"RefCell\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"option\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Option\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.krate =\n                                                    \"mini_ledger\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"Ledger\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = []})\n                                              ]})\n                                        ]})\n                                  ]},\n                              true)))\n                        ]}\n                     ];\n                   ret =\n                   Types.Adt {\n                     def_id =\n                     { Types.krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"option\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Option\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         (Types.Ref\n                            (Types.Region {todo = \"ReErased\"},\n                             Types.Adt {\n                               def_id =\n                               { Types.krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"cell\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"RefCell\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.krate = \"core\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"option\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Option\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.krate = \"mini_ledger\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"Ledger\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                       ]})\n                                 ]},\n                             false)))\n                       ]}}\n                 }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   Types.Remapped {\n                     local_path =\n                     (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                     virtual_name =\n                     \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                hi = { Types.col = \"54\"; line = \"108\" };\n                lo = { Types.col = \"16\"; line = \"108\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.krate = \"std\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"thread\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"local\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 4 };\n                      { Types.data = (Types.ValueNs \"new\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     Types.Remapped {\n                       local_path =\n                       (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                       virtual_name =\n                       \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                  hi = { Types.col = \"45\"; line = \"108\" };\n                  lo = { Types.col = \"16\"; line = \"108\" } };\n                ty =\n                Types.Arrow {\n                  params =\n                  [Types.Arrow {\n                     params =\n                     [Types.Adt {\n                        def_id =\n                        { Types.krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"option\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Option\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            (Types.Ref\n                               (Types.Region {todo = \"ReErased\"},\n                                Types.Adt {\n                                  def_id =\n                                  { Types.krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"option\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Option\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"cell\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"RefCell\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"option\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Option\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args =\n                                              [(Types.Type\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.krate =\n                                                      \"mini_ledger\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"Ledger\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = []})\n                                                ]})\n                                          ]})\n                                    ]},\n                                true)))\n                          ]}\n                       ];\n                     ret =\n                     Types.Adt {\n                       def_id =\n                       { Types.krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           (Types.Ref\n                              (Types.Region {todo = \"ReStatic\"},\n                               Types.Adt {\n                                 def_id =\n                                 { Types.krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"cell\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"RefCell\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"option\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Option\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.krate = \"mini_ledger\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"Ledger\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = []})\n                                         ]})\n                                   ]},\n                               false)))\n                         ]}}\n                    ];\n                  ret =\n                  Types.Adt {\n                    def_id =\n                    { Types.krate = \"std\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"thread\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"local\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"LocalKey\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"cell\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"RefCell\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"option\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Option\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.krate = \"mini_ledger\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"Ledger\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []})\n                                  ]})\n                            ]})\n                      ]}}\n                };\n              ty =\n              Types.Arrow {\n                params =\n                [Types.Arrow {\n                   params =\n                   [Types.Adt {\n                      def_id =\n                      { Types.krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"option\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Option\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          (Types.Ref\n                             (Types.Region {todo = \"ReErased\"},\n                              Types.Adt {\n                                def_id =\n                                { Types.krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"option\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Option\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"cell\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"RefCell\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"option\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Option\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.krate =\n                                                    \"mini_ledger\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"Ledger\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = []})\n                                              ]})\n                                        ]})\n                                  ]},\n                              true)))\n                        ]}\n                     ];\n                   ret =\n                   Types.Adt {\n                     def_id =\n                     { Types.krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"option\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Option\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         (Types.Ref\n                            (Types.Region {todo = \"ReStatic\"},\n                             Types.Adt {\n                               def_id =\n                               { Types.krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"cell\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"RefCell\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.krate = \"core\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"option\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Option\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.krate = \"mini_ledger\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"Ledger\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                       ]})\n                                 ]},\n                             false)))\n                       ]}}\n                  ];\n                ret =\n                Types.Adt {\n                  def_id =\n                  { Types.krate = \"std\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"thread\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"local\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"LocalKey\");\n                        disambiguator = 0 }\n                      ]\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"cell\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"RefCell\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"option\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Option\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.krate = \"mini_ledger\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"Ledger\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []})\n                                ]})\n                          ]})\n                    ]}}};\n            hir_id = (Some (\"45\", \"15\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 Types.Remapped {\n                   local_path =\n                   (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                   virtual_name =\n                   \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n              hi = { Types.col = \"54\"; line = \"108\" };\n              lo = { Types.col = \"16\"; line = \"108\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.krate = \"std\";\n                path =\n                [{ Types.data = (Types.TypeNs \"thread\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"local\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"LocalKey\"); disambiguator = 0\n                    }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"cell\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"RefCell\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"option\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Option\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.krate = \"mini_ledger\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"Ledger\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []})\n                            ]})\n                      ]})\n                ]}\n            });\n    opt_destruction_scope = None;\n    region_scope = { Types.data = Types.Node; id = \"24\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         Types.Remapped {\n           local_path =\n           (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n           virtual_name =\n           \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n      hi = { Types.col = \"13\"; line = \"109\" };\n      lo = { Types.col = \"12\"; line = \"107\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"45\", \"14\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       Types.Remapped {\n         local_path =\n         (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n         virtual_name =\n         \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n    hi = { Types.col = \"13\"; line = \"109\" };\n    lo = { Types.col = \"12\"; line = \"107\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.krate = \"std\";\n      path =\n      [{ Types.data = (Types.TypeNs \"thread\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"local\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"LocalKey\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.krate = \"core\";\n            path =\n            [{ Types.data = (Types.TypeNs \"cell\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"RefCell\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Type\n              Types.Adt {\n                def_id =\n                { Types.krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0\n                     };\n                    { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0\n                      }\n                    ]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.krate = \"mini_ledger\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"Ledger\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                  ]})\n            ]})\n      ]}\n  }"

let v___init_under_LEDGER: Core.Cell.t_RefCell (Core.Option.t_Option t_Ledger) =
  Core.Cell.new_under_impl_21 Core.Option.Option_None

(* 
Last available AST for this item:

#[feature(register_tool)]
#[register_tool(_hax)]
#[inline()]
fn v___getit_under_LEDGER<Anonymous: 'unk>(
    init: core::option::t_Option<
        &mut core::option::t_Option<
            core::cell::t_RefCell<core::option::t_Option<mini_ledger::t_Ledger>>,
        >,
    >,
) -> core::option::t_Option<&core::cell::t_RefCell<core::option::t_Option<mini_ledger::t_Ledger>>> {
    {
        rust_primitives::hax::failure("","{ Types.attributes =\n  [{ Types.id = \"118\";\n     kind =\n     (Types.Normal\n        { Types.item =\n          { Types.args =\n            (Types.Delimited\n               { Types.delim = Types.Parenthesis;\n                 dspan =\n                 Types.DelimSpan {\n                   todo =\n                   \"DelimSpan { open: /Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs:92:24: 92:25 (#58), close: /Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs:92:38: 92:39 (#58) }\"};\n                 tokens = \"unused_unsafe\" });\n            path = \"allow\"; tokens = None };\n          tokens = None });\n     span =\n     { Types.filename =\n       (Types.Real\n          Types.Remapped {\n            local_path =\n            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n            virtual_name =\n            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n       hi = { Types.col = \"39\"; line = \"92\" };\n       lo = { Types.col = \"16\"; line = \"92\" } };\n     style = Types.Outer }\n    ];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Borrow {\n                   arg =\n                   { Types.attributes = [];\n                     contents =\n                     Types.Deref {\n                       arg =\n                       { Types.attributes = [];\n                         contents =\n                         (Types.Todo\n                            \"ThreadLocalRef(DefId(0:48 ~ mini_ledger[e8bc]::LEDGER::__getit::__KEY))\");\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              Types.Remapped {\n                                local_path =\n                                (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                virtual_name =\n                                \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                           hi = { Types.col = \"25\"; line = \"94\" };\n                           lo = { Types.col = \"20\"; line = \"94\" } };\n                         ty =\n                         (Types.Ref\n                            (Types.Region {todo = \"ReErased\"},\n                             Types.Adt {\n                               def_id =\n                               { Types.krate = \"std\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"sys\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"common\");\n                                     disambiguator = 0 };\n                                   { Types.data =\n                                     (Types.TypeNs \"thread_local\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"fast_local\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Key\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"cell\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"RefCell\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Option\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.krate =\n                                                   \"mini_ledger\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"Ledger\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = []})\n                                             ]})\n                                       ]})\n                                 ]},\n                             false))\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          Types.Remapped {\n                            local_path =\n                            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                            virtual_name =\n                            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                       hi = { Types.col = \"25\"; line = \"94\" };\n                       lo = { Types.col = \"20\"; line = \"94\" } };\n                     ty =\n                     Types.Adt {\n                       def_id =\n                       { Types.krate = \"std\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"sys\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"common\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"thread_local\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"fast_local\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Key\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"cell\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"RefCell\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"option\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"Option\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"mini_ledger\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"Ledger\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []})\n                                     ]})\n                               ]})\n                         ]}\n                     };\n                   borrow_kind = Types.Shared};\n                 hir_id = (Some (\"47\", \"7\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      Types.Remapped {\n                        local_path =\n                        (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                        virtual_name =\n                        \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                   hi = { Types.col = \"22\"; line = \"103\" };\n                   lo = { Types.col = \"20\"; line = \"94\" } };\n                 ty =\n                 (Types.Ref\n                    (Types.Region {todo = \"ReErased\"},\n                     Types.Adt {\n                       def_id =\n                       { Types.krate = \"std\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"sys\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"common\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"thread_local\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"fast_local\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Key\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"cell\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"RefCell\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"option\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"Option\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"mini_ledger\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"Ledger\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []})\n                                     ]})\n                               ]})\n                         ]},\n                     false))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Closure {\n                    body =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Block {\n                        expr =\n                        (Some { Types.attributes = [];\n                                contents =\n                                Types.Call {args = [];\n                                  fn_span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       Types.Remapped {\n                                         local_path =\n                                         (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                         virtual_name =\n                                         \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                    hi = { Types.col = \"32\"; line = \"102\" };\n                                    lo = { Types.col = \"24\"; line = \"102\" } };\n                                  from_hir_call = true;\n                                  fun' =\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.GlobalName {\n                                      id =\n                                      { Types.krate = \"mini_ledger\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.ValueNs \"LEDGER\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.ValueNs \"__init\");\n                                            disambiguator = 0 }\n                                          ]\n                                        }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         Types.Remapped {\n                                           local_path =\n                                           (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                           virtual_name =\n                                           \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                      hi = { Types.col = \"30\"; line = \"102\" };\n                                      lo = { Types.col = \"24\"; line = \"102\" }\n                                      };\n                                    ty =\n                                    Types.Arrow {params = [];\n                                      ret =\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"cell\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"RefCell\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"option\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Option\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args =\n                                              [(Types.Type\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.krate =\n                                                      \"mini_ledger\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"Ledger\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = []})\n                                                ]})\n                                          ]}}\n                                    };\n                                  ty =\n                                  Types.Arrow {params = [];\n                                    ret =\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"cell\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"RefCell\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"option\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Option\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.krate =\n                                                    \"mini_ledger\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"Ledger\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = []})\n                                              ]})\n                                        ]}}};\n                                hir_id = (Some (\"47\", \"70\"));\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     Types.Remapped {\n                                       local_path =\n                                       (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                       virtual_name =\n                                       \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                  hi = { Types.col = \"32\"; line = \"102\" };\n                                  lo = { Types.col = \"24\"; line = \"102\" } };\n                                ty =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"cell\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"RefCell\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"option\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Option\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.krate = \"mini_ledger\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"Ledger\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = []})\n                                          ]})\n                                    ]}\n                                });\n                        opt_destruction_scope = None;\n                        region_scope = { Types.data = Types.Node; id = \"73\" };\n                        safety_mode = Types.Safe;\n                        span =\n                        { Types.filename =\n                          (Types.Real\n                             Types.Remapped {\n                               local_path =\n                               (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                               virtual_name =\n                               \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                          hi = { Types.col = \"21\"; line = \"103\" };\n                          lo = { Types.col = \"38\"; line = \"94\" } };\n                        stmts =\n                        [{ Types.kind =\n                           Types.Expr {\n                             expr =\n                             { Types.attributes = [];\n                               contents =\n                               Types.If {\n                                 cond =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Let {\n                                     expr =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.UpvarRef {\n                                         closure_def_id =\n                                         { Types.krate = \"mini_ledger\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.ValueNs \"LEDGER\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"__getit\");\n                                               disambiguator = 0 };\n                                             { Types.data = Types.ClosureExpr;\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         var_hir_id =\n                                         { Types.id =\n                                           { Types.local_id = \"2\";\n                                             owner =\n                                             { Types.krate = \"mini_ledger\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.ValueNs \"LEDGER\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"__getit\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }\n                                             };\n                                           name = \"init\" }};\n                                       hir_id = (Some (\"47\", \"20\"));\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            Types.Remapped {\n                                              local_path =\n                                              (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                              virtual_name =\n                                              \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                         hi =\n                                         { Types.col = \"72\"; line = \"95\" };\n                                         lo =\n                                         { Types.col = \"68\"; line = \"95\" } };\n                                       ty =\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"option\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Option\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             (Types.Ref\n                                                (Types.Region {\n                                                   todo = \"ReErased\"},\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"option\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Option\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.krate =\n                                                           \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"cell\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"RefCell\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                 ]})\n                                                           ]})\n                                                     ]},\n                                                 true)))\n                                           ]}\n                                       };\n                                     pat =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.Variant {\n                                         info =\n                                         { Types.typ =\n                                           { Types.krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Option\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           typ_is_record = false;\n                                           typ_is_struct = false;\n                                           type_namespace =\n                                           { Types.krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           variant =\n                                           { Types.krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Option\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Some\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           variant_is_record = false };\n                                         subpatterns =\n                                         [{ Types.field =\n                                            { Types.krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"option\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Option\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Some\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"0\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            pattern =\n                                            { Types.attributes = [];\n                                              contents =\n                                              Types.Binding {\n                                                is_primary = true;\n                                                mode = Types.ByValue;\n                                                mutability = false;\n                                                subpattern = None;\n                                                ty =\n                                                (Types.Ref\n                                                   (Types.Region {\n                                                      todo = \"ReErased\"},\n                                                    Types.Adt {\n                                                      def_id =\n                                                      { Types.krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"option\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"Option\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args =\n                                                      [(Types.Type\n                                                          Types.Adt {\n                                                            def_id =\n                                                            { Types.krate =\n                                                              \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"cell\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              };\n                                                            generic_args =\n                                                            [(Types.Type\n                                                                Types.Adt {\n                                                                  def_id =\n                                                                  { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                  generic_args =\n                                                                  [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                              ]})\n                                                        ]},\n                                                    true));\n                                                var =\n                                                { Types.id =\n                                                  { Types.local_id = \"18\";\n                                                    owner =\n                                                    { Types.krate =\n                                                      \"mini_ledger\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.ValueNs\n                                                            \"LEDGER\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"__getit\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      }\n                                                    };\n                                                  name = \"init\" }};\n                                              hir_id = None;\n                                              span =\n                                              { Types.filename =\n                                                (Types.Real\n                                                   Types.Remapped {\n                                                     local_path =\n                                                     (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                     virtual_name =\n                                                     \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                hi =\n                                                { Types.col = \"64\";\n                                                  line = \"95\" };\n                                                lo =\n                                                { Types.col = \"60\";\n                                                  line = \"95\" }\n                                                };\n                                              ty =\n                                              (Types.Ref\n                                                 (Types.Region {\n                                                    todo = \"ReErased\"},\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"option\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"Option\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args =\n                                                    [(Types.Type\n                                                        Types.Adt {\n                                                          def_id =\n                                                          { Types.krate =\n                                                            \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"cell\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"RefCell\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            };\n                                                          generic_args =\n                                                          [(Types.Type\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                  ]})\n                                                            ]})\n                                                      ]},\n                                                  true))\n                                              }\n                                            }\n                                           ];\n                                         substs =\n                                         [(Types.Type\n                                             (Types.Ref\n                                                (Types.Region {\n                                                   todo = \"ReErased\"},\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"option\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Option\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.krate =\n                                                           \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"cell\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"RefCell\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                 ]})\n                                                           ]})\n                                                     ]},\n                                                 true)))\n                                           ]};\n                                       hir_id = None;\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            Types.Remapped {\n                                              local_path =\n                                              (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                              virtual_name =\n                                              \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                         hi =\n                                         { Types.col = \"65\"; line = \"95\" };\n                                         lo =\n                                         { Types.col = \"31\"; line = \"95\" } };\n                                       ty =\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"option\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Option\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             (Types.Ref\n                                                (Types.Region {\n                                                   todo = \"ReErased\"},\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"option\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Option\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.krate =\n                                                           \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"cell\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"RefCell\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                 ]})\n                                                           ]})\n                                                     ]},\n                                                 true)))\n                                           ]}\n                                       }};\n                                   hir_id = (Some (\"47\", \"12\"));\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        Types.Remapped {\n                                          local_path =\n                                          (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                          virtual_name =\n                                          \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                     hi = { Types.col = \"72\"; line = \"95\" };\n                                     lo = { Types.col = \"27\"; line = \"95\" } };\n                                   ty = Types.Bool };\n                                 else_opt = None;\n                                 if_then_scope =\n                                 { Types.data = Types.IfThen; id = \"68\" };\n                                 then' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Block {\n                                     expr =\n                                     (Some { Types.attributes = [];\n                                             contents =\n                                             Types.If {\n                                               cond =\n                                               { Types.attributes = [];\n                                                 contents =\n                                                 Types.Let {\n                                                   expr =\n                                                   { Types.attributes = [];\n                                                     contents =\n                                                     Types.Call {\n                                                       args =\n                                                       [{ Types.attributes =\n                                                          [];\n                                                          contents =\n                                                          Types.Borrow {\n                                                            arg =\n                                                            { Types.attributes =\n                                                              [];\n                                                              contents =\n                                                              Types.Deref {\n                                                                arg =\n                                                                { Types.attributes =\n                                                                  [];\n                                                                  contents =\n                                                                  Types.VarRef {\n                                                                    id =\n                                                                    { Types.id =\n                                                                    { Types.local_id =\n                                                                    \"18\";\n                                                                    owner =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"LEDGER\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"__getit\");\n                                                                    disambiguator =\n                                                                    0 }] } };\n                                                                    name =\n                                                                    \"init\" }};\n                                                                  hir_id =\n                                                                  None;\n                                                                  span =\n                                                                  { Types.filename =\n                                                                    (\n                                                                    Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"77\";\n                                                                    line =\n                                                                    \"96\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"73\";\n                                                                    line =\n                                                                    \"96\" } };\n                                                                  ty =\n                                                                  (Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]})\n                                                                    ]}, true))\n                                                                  }};\n                                                              hir_id = None;\n                                                              span =\n                                                              { Types.filename =\n                                                                (Types.Real\n                                                                   Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                hi =\n                                                                { Types.col =\n                                                                  \"84\";\n                                                                  line = \"96\"\n                                                                  };\n                                                                lo =\n                                                                { Types.col =\n                                                                  \"73\";\n                                                                  line = \"96\"\n                                                                  }\n                                                                };\n                                                              ty =\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]})\n                                                                  ]}\n                                                              };\n                                                            borrow_kind =\n                                                            Types.Mut {\n                                                              allow_two_phase_borrow =\n                                                              true}};\n                                                          hir_id =\n                                                          (Some (\"47\", \"33\"));\n                                                          span =\n                                                          { Types.filename =\n                                                            (Types.Real\n                                                               Types.Remapped {\n                                                                 local_path =\n                                                                 (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                 virtual_name =\n                                                                 \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                            hi =\n                                                            { Types.col =\n                                                              \"84\";\n                                                              line = \"96\" };\n                                                            lo =\n                                                            { Types.col =\n                                                              \"73\";\n                                                              line = \"96\" }\n                                                            };\n                                                          ty =\n                                                          (Types.Ref\n                                                             (Types.Region {\n                                                                todo =\n                                                                \"ReErased\"},\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]})\n                                                                  ]},\n                                                              true))\n                                                          }\n                                                         ];\n                                                       fn_span =\n                                                       { Types.filename =\n                                                         (Types.Real\n                                                            Types.Remapped {\n                                                              local_path =\n                                                              (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                              virtual_name =\n                                                              \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                         hi =\n                                                         { Types.col = \"84\";\n                                                           line = \"96\" };\n                                                         lo =\n                                                         { Types.col = \"78\";\n                                                           line = \"96\" }\n                                                         };\n                                                       from_hir_call = true;\n                                                       fun' =\n                                                       { Types.attributes =\n                                                         [];\n                                                         contents =\n                                                         Types.GlobalName {\n                                                           id =\n                                                           { Types.krate =\n                                                             \"core\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"option\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 Types.Impl;\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.ValueNs\n                                                                    \"take\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             }};\n                                                         hir_id = None;\n                                                         span =\n                                                         { Types.filename =\n                                                           (Types.Real\n                                                              Types.Remapped {\n                                                                local_path =\n                                                                (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                virtual_name =\n                                                                \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                           hi =\n                                                           { Types.col = \"82\";\n                                                             line = \"96\" };\n                                                           lo =\n                                                           { Types.col = \"78\";\n                                                             line = \"96\" }\n                                                           };\n                                                         ty =\n                                                         Types.Arrow {\n                                                           params =\n                                                           [(Types.Ref\n                                                               (Types.Region {\n                                                                  todo =\n                                                                  \"ReErased\"},\n                                                                Types.Adt {\n                                                                  def_id =\n                                                                  { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                  generic_args =\n                                                                  [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]})\n                                                                    ]},\n                                                                true))\n                                                             ];\n                                                           ret =\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.krate =\n                                                               \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"option\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Option\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]})\n                                                               ]}}\n                                                         };\n                                                       ty =\n                                                       Types.Arrow {\n                                                         params =\n                                                         [(Types.Ref\n                                                             (Types.Region {\n                                                                todo =\n                                                                \"ReErased\"},\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]})\n                                                                  ]},\n                                                              true))\n                                                           ];\n                                                         ret =\n                                                         Types.Adt {\n                                                           def_id =\n                                                           { Types.krate =\n                                                             \"core\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"option\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Option\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             };\n                                                           generic_args =\n                                                           [(Types.Type\n                                                               Types.Adt {\n                                                                 def_id =\n                                                                 { Types.krate =\n                                                                   \"core\";\n                                                                   path =\n                                                                   [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                   };\n                                                                 generic_args =\n                                                                 [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                                   ]})\n                                                             ]}}};\n                                                     hir_id =\n                                                     (Some (\"47\", \"31\"));\n                                                     span =\n                                                     { Types.filename =\n                                                       (Types.Real\n                                                          Types.Remapped {\n                                                            local_path =\n                                                            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                            virtual_name =\n                                                            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                       hi =\n                                                       { Types.col = \"84\";\n                                                         line = \"96\" };\n                                                       lo =\n                                                       { Types.col = \"73\";\n                                                         line = \"96\" }\n                                                       };\n                                                     ty =\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"option\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Option\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.krate =\n                                                               \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"cell\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                               ]})\n                                                         ]}\n                                                     };\n                                                   pat =\n                                                   { Types.attributes = [];\n                                                     contents =\n                                                     Types.Variant {\n                                                       info =\n                                                       { Types.typ =\n                                                         { Types.krate =\n                                                           \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"option\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Option\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         typ_is_record =\n                                                         false;\n                                                         typ_is_struct =\n                                                         false;\n                                                         type_namespace =\n                                                         { Types.krate =\n                                                           \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"option\");\n                                                              disambiguator =\n                                                              0 }\n                                                             ]\n                                                           };\n                                                         variant =\n                                                         { Types.krate =\n                                                           \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"option\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Option\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Some\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         variant_is_record =\n                                                         false };\n                                                       subpatterns =\n                                                       [{ Types.field =\n                                                          { Types.krate =\n                                                            \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"option\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"Option\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"Some\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.ValueNs\n                                                                   \"0\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            };\n                                                          pattern =\n                                                          { Types.attributes =\n                                                            [];\n                                                            contents =\n                                                            Types.Binding {\n                                                              is_primary =\n                                                              true;\n                                                              mode =\n                                                              Types.ByValue;\n                                                              mutability =\n                                                              false;\n                                                              subpattern =\n                                                              None;\n                                                              ty =\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                                  ]};\n                                                              var =\n                                                              { Types.id =\n                                                                { Types.local_id =\n                                                                  \"29\";\n                                                                  owner =\n                                                                  { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"LEDGER\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"__getit\");\n                                                                    disambiguator =\n                                                                    0 }] }\n                                                                  };\n                                                                name =\n                                                                \"value\" }};\n                                                            hir_id = None;\n                                                            span =\n                                                            { Types.filename =\n                                                              (Types.Real\n                                                                 Types.Remapped {\n                                                                   local_path =\n                                                                   (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                   virtual_name =\n                                                                   \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                              hi =\n                                                              { Types.col =\n                                                                \"69\";\n                                                                line = \"96\" };\n                                                              lo =\n                                                              { Types.col =\n                                                                \"64\";\n                                                                line = \"96\" }\n                                                              };\n                                                            ty =\n                                                            Types.Adt {\n                                                              def_id =\n                                                              { Types.krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"cell\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                                ]}\n                                                            }\n                                                          }\n                                                         ];\n                                                       substs =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.krate =\n                                                               \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"cell\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                               ]})\n                                                         ]};\n                                                     hir_id = None;\n                                                     span =\n                                                     { Types.filename =\n                                                       (Types.Real\n                                                          Types.Remapped {\n                                                            local_path =\n                                                            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                            virtual_name =\n                                                            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                       hi =\n                                                       { Types.col = \"70\";\n                                                         line = \"96\" };\n                                                       lo =\n                                                       { Types.col = \"35\";\n                                                         line = \"96\" }\n                                                       };\n                                                     ty =\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"option\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Option\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.krate =\n                                                               \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"cell\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})\n                                                               ]})\n                                                         ]}\n                                                     }};\n                                                 hir_id = (Some (\"47\", \"23\"));\n                                                 span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      Types.Remapped {\n                                                        local_path =\n                                                        (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                        virtual_name =\n                                                        \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                   hi =\n                                                   { Types.col = \"84\";\n                                                     line = \"96\" };\n                                                   lo =\n                                                   { Types.col = \"31\";\n                                                     line = \"96\" }\n                                                   };\n                                                 ty = Types.Bool };\n                                               else_opt =\n                                               (Some { Types.attributes = [];\n                                                       contents =\n                                                       Types.If {\n                                                         cond =\n                                                         { Types.attributes =\n                                                           [];\n                                                           contents =\n                                                           Types.Use {\n                                                             source =\n                                                             { Types.attributes =\n                                                               [];\n                                                               contents =\n                                                               Types.Literal {\n                                                                 lit =\n                                                                 { Types.node =\n                                                                   (Types.Bool\n                                                                    true);\n                                                                   span =\n                                                                   { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"68\";\n                                                                    line =\n                                                                    \"98\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"38\";\n                                                                    line =\n                                                                    \"98\" } }\n                                                                   };\n                                                                 neg = false};\n                                                               hir_id =\n                                                               (Some (\n                                                               \"47\", \"42\"));\n                                                               span =\n                                                               { Types.filename =\n                                                                 (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                 hi =\n                                                                 { Types.col =\n                                                                   \"68\";\n                                                                   line =\n                                                                   \"98\" };\n                                                                 lo =\n                                                                 { Types.col =\n                                                                   \"38\";\n                                                                   line =\n                                                                   \"98\" }\n                                                                 };\n                                                               ty =\n                                                               Types.Bool }};\n                                                           hir_id =\n                                                           (Some (\"47\", \"43\"));\n                                                           span =\n                                                           { Types.filename =\n                                                             (Types.Real\n                                                                Types.Remapped {\n                                                                  local_path =\n                                                                  (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                  virtual_name =\n                                                                  \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                             hi =\n                                                             { Types.col =\n                                                               \"68\";\n                                                               line = \"98\" };\n                                                             lo =\n                                                             { Types.col =\n                                                               \"38\";\n                                                               line = \"98\" }\n                                                             };\n                                                           ty = Types.Bool };\n                                                         else_opt = None;\n                                                         if_then_scope =\n                                                         { Types.data =\n                                                           Types.IfThen;\n                                                           id = \"66\" };\n                                                         then' =\n                                                         { Types.attributes =\n                                                           [];\n                                                           contents =\n                                                           Types.NeverToAny {\n                                                             source =\n                                                             { Types.attributes =\n                                                               [];\n                                                               contents =\n                                                               Types.Block {\n                                                                 expr = None;\n                                                                 opt_destruction_scope =\n                                                                 None;\n                                                                 region_scope =\n                                                                 { Types.data =\n                                                                   Types.Node;\n                                                                   id = \"65\"\n                                                                   };\n                                                                 safety_mode =\n                                                                 Types.Safe;\n                                                                 span =\n                                                                 { Types.filename =\n                                                                   (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                   hi =\n                                                                   { Types.col =\n                                                                    \"29\";\n                                                                    line =\n                                                                    \"100\" };\n                                                                   lo =\n                                                                   { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"98\" }\n                                                                   };\n                                                                 stmts =\n                                                                 [{ Types.kind =\n                                                                    Types.Expr {\n                                                                    expr =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Block {\n                                                                    expr =\n                                                                    None;\n                                                                    opt_destruction_scope =\n                                                                    None;\n                                                                    region_scope =\n                                                                    { Types.data =\n                                                                    Types.Node;\n                                                                    id = \"63\"\n                                                                    };\n                                                                    safety_mode =\n                                                                    Types.Safe;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"5\";\n                                                                    line =\n                                                                    \"62\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"20\";\n                                                                    line =\n                                                                    \"58\" } };\n                                                                    stmts =\n                                                                    [{ Types.kind =\n                                                                    Types.Expr {\n                                                                    expr =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Call {\n                                                                    args =\n                                                                    [{ Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Call {\n                                                                    args =\n                                                                    [{ Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Pointer {\n                                                                    cast =\n                                                                    Types.Unsize;\n                                                                    source =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Borrow {\n                                                                    arg =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Deref {\n                                                                    arg =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Borrow {\n                                                                    arg =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Array {\n                                                                    fields =\n                                                                    [{ Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Str\n                                                                    (\"internal error: entered unreachable code: missing default value\",\n                                                                    Types.Cooked));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } }\n                                                                    };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"51\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Str,\n                                                                    false)) }\n                                                                    ]};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"52\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Array\n                                                                    ((\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Str,\n                                                                    false)),\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"1\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })) };\n                                                                    borrow_kind =\n                                                                    Types.Shared};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Array\n                                                                    ((\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Str,\n                                                                    false)),\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"1\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })),\n                                                                    false)) }};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Array\n                                                                    ((\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Str,\n                                                                    false)),\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"1\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })) };\n                                                                    borrow_kind =\n                                                                    Types.Shared};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Array\n                                                                    ((\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Str,\n                                                                    false)),\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"1\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })),\n                                                                    false)) }};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"53\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"69\";\n                                                                    line =\n                                                                    \"93\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"23\";\n                                                                    line =\n                                                                    \"93\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Slice\n                                                                    (Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    Types.Str,\n                                                                    false))),\n                                                                    false)) };\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Pointer {\n                                                                    cast =\n                                                                    Types.Unsize;\n                                                                    source =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Borrow {\n                                                                    arg =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Deref {\n                                                                    arg =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Borrow {\n                                                                    arg =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Call {\n                                                                    args = [];\n                                                                    fn_span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    from_hir_call =\n                                                                    true;\n                                                                    fun' =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.GlobalName {\n                                                                    id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    1 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"none\");\n                                                                    disambiguator =\n                                                                    0 }] }};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    Types.Arrow {\n                                                                    params =\n                                                                    [];\n                                                                    ret =\n                                                                    (\n                                                                    Types.Array\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]},\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"0\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    }))} };\n                                                                    ty =\n                                                                    Types.Arrow {\n                                                                    params =\n                                                                    [];\n                                                                    ret =\n                                                                    (\n                                                                    Types.Array\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]},\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"0\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    }))}};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"57\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Array\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]},\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"0\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })) };\n                                                                    borrow_kind =\n                                                                    Types.Shared};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Array\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]},\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"0\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })),\n                                                                    false)) }};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Array\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]},\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"0\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })) };\n                                                                    borrow_kind =\n                                                                    Types.Shared};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Array\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]},\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.Literal {\n                                                                    lit =\n                                                                    { Types.node =\n                                                                    (Types.Int\n                                                                    (\"0\",\n                                                                    (Types.Unsigned\n                                                                    Types.Usize)));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } } };\n                                                                    neg =\n                                                                    false};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    (Types.LocalPath\n                                                                    \"src/mini_ledger/src/main.rs\"));\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"0\";\n                                                                    line =\n                                                                    \"1\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.Usize)\n                                                                    })),\n                                                                    false)) }};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"58\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    (\n                                                                    Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Slice\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}),\n                                                                    false)) }\n                                                                    ];\n                                                                    fn_span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    from_hir_call =\n                                                                    true;\n                                                                    fun' =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.GlobalName {\n                                                                    id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    2 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"new_v1\");\n                                                                    disambiguator =\n                                                                    0 }] }};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    Types.Arrow {\n                                                                    params =\n                                                                    [(Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Slice\n                                                                    (Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReStatic\"},\n                                                                    Types.Str,\n                                                                    false))),\n                                                                    false));\n                                                                    (Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Slice\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}),\n                                                                    false))];\n                                                                    ret =\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Arguments\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}} };\n                                                                    ty =\n                                                                    Types.Arrow {\n                                                                    params =\n                                                                    [(Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Slice\n                                                                    (Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReStatic\"},\n                                                                    Types.Str,\n                                                                    false))),\n                                                                    false));\n                                                                    (Types.Ref\n                                                                    (Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"},\n                                                                    (Types.Slice\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"rt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Argument\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}),\n                                                                    false))];\n                                                                    ret =\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Arguments\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}}};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"50\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"71\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"37\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Arguments\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]} }];\n                                                                    fn_span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"72\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"8\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    from_hir_call =\n                                                                    true;\n                                                                    fun' =\n                                                                    { Types.attributes =\n                                                                    [];\n                                                                    contents =\n                                                                    Types.GlobalName {\n                                                                    id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"panicking\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"panic_fmt\");\n                                                                    disambiguator =\n                                                                    0 }] }};\n                                                                    hir_id =\n                                                                    None;\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"36\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"8\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    Types.Arrow {\n                                                                    params =\n                                                                    [Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Arguments\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}];\n                                                                    ret =\n                                                                    Types.Never}\n                                                                    };\n                                                                    ty =\n                                                                    Types.Arrow {\n                                                                    params =\n                                                                    [Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"fmt\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Arguments\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Lifetime\n                                                                    Types.Region {\n                                                                    todo =\n                                                                    \"ReErased\"})\n                                                                    ]}];\n                                                                    ret =\n                                                                    Types.Never}};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"45\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"72\";\n                                                                    line =\n                                                                    \"61\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"8\";\n                                                                    line =\n                                                                    \"61\" } };\n                                                                    ty =\n                                                                    Types.Never\n                                                                    };\n                                                                    scope =\n                                                                    { Types.data =\n                                                                    Types.Node;\n                                                                    id = \"62\"\n                                                                    }};\n                                                                    opt_destruction_scope =\n                                                                    (Some \n                                                                    { Types.data =\n                                                                    Types.Destruction;\n                                                                    id = \"62\"\n                                                                    }) }];\n                                                                    targeted_by_break =\n                                                                    false};\n                                                                    hir_id =\n                                                                    (Some (\n                                                                    \"47\",\n                                                                    \"44\"));\n                                                                    span =\n                                                                    { Types.filename =\n                                                                    (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/core/src/panic.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"5\";\n                                                                    line =\n                                                                    \"62\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"20\";\n                                                                    line =\n                                                                    \"58\" } };\n                                                                    ty =\n                                                                    Types.Never\n                                                                    };\n                                                                    scope =\n                                                                    { Types.data =\n                                                                    Types.Node;\n                                                                    id = \"64\"\n                                                                    }};\n                                                                    opt_destruction_scope =\n                                                                    (Some \n                                                                    { Types.data =\n                                                                    Types.Destruction;\n                                                                    id = \"64\"\n                                                                    }) }\n                                                                   ];\n                                                                 targeted_by_break =\n                                                                 false};\n                                                               hir_id = None;\n                                                               span =\n                                                               { Types.filename =\n                                                                 (Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                 hi =\n                                                                 { Types.col =\n                                                                   \"29\";\n                                                                   line =\n                                                                   \"100\" };\n                                                                 lo =\n                                                                 { Types.col =\n                                                                   \"69\";\n                                                                   line =\n                                                                   \"98\" }\n                                                                 };\n                                                               ty =\n                                                               Types.Never }};\n                                                           hir_id =\n                                                           (Some (\"47\", \"66\"));\n                                                           span =\n                                                           { Types.filename =\n                                                             (Types.Real\n                                                                Types.Remapped {\n                                                                  local_path =\n                                                                  (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                  virtual_name =\n                                                                  \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                             hi =\n                                                             { Types.col =\n                                                               \"29\";\n                                                               line = \"100\" };\n                                                             lo =\n                                                             { Types.col =\n                                                               \"69\";\n                                                               line = \"98\" }\n                                                             };\n                                                           ty =\n                                                           (Types.Tuple []) }};\n                                                       hir_id =\n                                                       (Some (\"47\", \"41\"));\n                                                       span =\n                                                       { Types.filename =\n                                                         (Types.Real\n                                                            Types.Remapped {\n                                                              local_path =\n                                                              (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                              virtual_name =\n                                                              \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                         hi =\n                                                         { Types.col = \"29\";\n                                                           line = \"100\" };\n                                                         lo =\n                                                         { Types.col = \"35\";\n                                                           line = \"98\" }\n                                                         };\n                                                       ty = (Types.Tuple [])\n                                                       });\n                                               if_then_scope =\n                                               { Types.data = Types.IfThen;\n                                                 id = \"40\" };\n                                               then' =\n                                               { Types.attributes = [];\n                                                 contents =\n                                                 Types.NeverToAny {\n                                                   source =\n                                                   { Types.attributes = [];\n                                                     contents =\n                                                     Types.Block {\n                                                       expr = None;\n                                                       opt_destruction_scope =\n                                                       None;\n                                                       region_scope =\n                                                       { Types.data =\n                                                         Types.Node;\n                                                         id = \"39\" };\n                                                       safety_mode =\n                                                       Types.Safe;\n                                                       span =\n                                                       { Types.filename =\n                                                         (Types.Real\n                                                            Types.Remapped {\n                                                              local_path =\n                                                              (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                              virtual_name =\n                                                              \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                         hi =\n                                                         { Types.col = \"29\";\n                                                           line = \"98\" };\n                                                         lo =\n                                                         { Types.col = \"85\";\n                                                           line = \"96\" }\n                                                         };\n                                                       stmts =\n                                                       [{ Types.kind =\n                                                          Types.Expr {\n                                                            expr =\n                                                            { Types.attributes =\n                                                              [];\n                                                              contents =\n                                                              Types.Return {\n                                                                value =\n                                                                (Some \n                                                                { Types.attributes =\n                                                                  [];\n                                                                  contents =\n                                                                  Types.VarRef {\n                                                                    id =\n                                                                    { Types.id =\n                                                                    { Types.local_id =\n                                                                    \"29\";\n                                                                    owner =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"LEDGER\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"__getit\");\n                                                                    disambiguator =\n                                                                    0 }] } };\n                                                                    name =\n                                                                    \"value\" }};\n                                                                  hir_id =\n                                                                  (Some (\n                                                                  \"47\", \"36\"));\n                                                                  span =\n                                                                  { Types.filename =\n                                                                    (\n                                                                    Types.Real\n                                                                    Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                    hi =\n                                                                    { Types.col =\n                                                                    \"44\";\n                                                                    line =\n                                                                    \"97\" };\n                                                                    lo =\n                                                                    { Types.col =\n                                                                    \"39\";\n                                                                    line =\n                                                                    \"97\" } };\n                                                                  ty =\n                                                                  Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"cell\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"RefCell\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"option\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Option\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.krate =\n                                                                    \"mini_ledger\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Ledger\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})]})]}\n                                                                  })};\n                                                              hir_id =\n                                                              (Some (\n                                                              \"47\", \"35\"));\n                                                              span =\n                                                              { Types.filename =\n                                                                (Types.Real\n                                                                   Types.Remapped {\n                                                                    local_path =\n                                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                                    virtual_name =\n                                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                                hi =\n                                                                { Types.col =\n                                                                  \"44\";\n                                                                  line = \"97\"\n                                                                  };\n                                                                lo =\n                                                                { Types.col =\n                                                                  \"32\";\n                                                                  line = \"97\"\n                                                                  }\n                                                                };\n                                                              ty =\n                                                              Types.Never };\n                                                            scope =\n                                                            { Types.data =\n                                                              Types.Node;\n                                                              id = \"38\" }};\n                                                          opt_destruction_scope =\n                                                          (Some { Types.data =\n                                                                  Types.Destruction;\n                                                                  id = \"38\" })\n                                                          }\n                                                         ];\n                                                       targeted_by_break =\n                                                       false};\n                                                     hir_id = None;\n                                                     span =\n                                                     { Types.filename =\n                                                       (Types.Real\n                                                          Types.Remapped {\n                                                            local_path =\n                                                            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                            virtual_name =\n                                                            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                       hi =\n                                                       { Types.col = \"29\";\n                                                         line = \"98\" };\n                                                       lo =\n                                                       { Types.col = \"85\";\n                                                         line = \"96\" }\n                                                       };\n                                                     ty = Types.Never }};\n                                                 hir_id = (Some (\"47\", \"40\"));\n                                                 span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      Types.Remapped {\n                                                        local_path =\n                                                        (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                        virtual_name =\n                                                        \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                                   hi =\n                                                   { Types.col = \"29\";\n                                                     line = \"98\" };\n                                                   lo =\n                                                   { Types.col = \"85\";\n                                                     line = \"96\" }\n                                                   };\n                                                 ty = (Types.Tuple []) }};\n                                             hir_id = (Some (\"47\", \"22\"));\n                                             span =\n                                             { Types.filename =\n                                               (Types.Real\n                                                  Types.Remapped {\n                                                    local_path =\n                                                    (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                                    virtual_name =\n                                                    \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                               hi =\n                                               { Types.col = \"29\";\n                                                 line = \"100\" };\n                                               lo =\n                                               { Types.col = \"28\";\n                                                 line = \"96\" }\n                                               };\n                                             ty = (Types.Tuple []) });\n                                     opt_destruction_scope = None;\n                                     region_scope =\n                                     { Types.data = Types.Node; id = \"67\" };\n                                     safety_mode = Types.Safe;\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          Types.Remapped {\n                                            local_path =\n                                            (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                            virtual_name =\n                                            \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                       hi =\n                                       { Types.col = \"25\"; line = \"101\" };\n                                       lo = { Types.col = \"73\"; line = \"95\" }\n                                       };\n                                     stmts = []; targeted_by_break = false};\n                                   hir_id = (Some (\"47\", \"68\"));\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        Types.Remapped {\n                                          local_path =\n                                          (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                          virtual_name =\n                                          \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                     hi = { Types.col = \"25\"; line = \"101\" };\n                                     lo = { Types.col = \"73\"; line = \"95\" } };\n                                   ty = (Types.Tuple []) }};\n                               hir_id = (Some (\"47\", \"11\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    Types.Remapped {\n                                      local_path =\n                                      (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                                      virtual_name =\n                                      \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                                 hi = { Types.col = \"25\"; line = \"101\" };\n                                 lo = { Types.col = \"24\"; line = \"95\" } };\n                               ty = (Types.Tuple []) };\n                             scope = { Types.data = Types.Node; id = \"69\" }};\n                           opt_destruction_scope =\n                           (Some { Types.data = Types.Destruction; id = \"69\"\n                                   })\n                           }\n                          ];\n                        targeted_by_break = false};\n                      hir_id = (Some (\"47\", \"10\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           Types.Remapped {\n                             local_path =\n                             (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                             virtual_name =\n                             \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                        hi = { Types.col = \"21\"; line = \"103\" };\n                        lo = { Types.col = \"38\"; line = \"94\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"cell\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"RefCell\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"option\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Option\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.krate = \"mini_ledger\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"Ledger\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []})\n                                ]})\n                          ]}\n                      };\n                    movability = None;\n                    params =\n                    [{ Types.attributes = []; hir_id = None; pat = None;\n                       self_kind = None;\n                       ty =\n                       Types.Arrow {params = [];\n                         ret =\n                         Types.Adt {\n                           def_id =\n                           { Types.krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"cell\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"RefCell\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"option\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"Option\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.krate = \"mini_ledger\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"Ledger\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []})\n                                   ]})\n                             ]}};\n                       ty_span = None }\n                      ];\n                    upvars =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.VarRef {\n                         id =\n                         { Types.id =\n                           { Types.local_id = \"2\";\n                             owner =\n                             { Types.krate = \"mini_ledger\";\n                               path =\n                               [{ Types.data = (Types.ValueNs \"LEDGER\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.ValueNs \"__getit\");\n                                   disambiguator = 0 }\n                                 ]\n                               }\n                             };\n                           name = \"init\" }};\n                       hir_id = None;\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            Types.Remapped {\n                              local_path =\n                              (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                              virtual_name =\n                              \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                         hi = { Types.col = \"21\"; line = \"103\" };\n                         lo = { Types.col = \"30\"; line = \"94\" } };\n                       ty =\n                       Types.Adt {\n                         def_id =\n                         { Types.krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             (Types.Ref\n                                (Types.Region {todo = \"ReErased\"},\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"option\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"Option\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"cell\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"RefCell\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Option\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.krate =\n                                                       \"mini_ledger\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"Ledger\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = []})\n                                                 ]})\n                                           ]})\n                                     ]},\n                                 true)))\n                           ]}\n                       }\n                      ]};\n                  hir_id = (Some (\"47\", \"9\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       Types.Remapped {\n                         local_path =\n                         (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                         virtual_name =\n                         \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                    hi = { Types.col = \"21\"; line = \"103\" };\n                    lo = { Types.col = \"30\"; line = \"94\" } };\n                  ty =\n                  Types.Arrow {params = [];\n                    ret =\n                    Types.Adt {\n                      def_id =\n                      { Types.krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"cell\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"RefCell\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"option\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Option\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.krate = \"mini_ledger\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"Ledger\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []})\n                              ]})\n                        ]}}\n                  }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   Types.Remapped {\n                     local_path =\n                     (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                     virtual_name =\n                     \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                hi = { Types.col = \"22\"; line = \"103\" };\n                lo = { Types.col = \"26\"; line = \"94\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.krate = \"std\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"sys\"); disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"common\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"thread_local\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"fast_local\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 1 };\n                      { Types.data = (Types.ValueNs \"get\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     Types.Remapped {\n                       local_path =\n                       (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                       virtual_name =\n                       \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n                  hi = { Types.col = \"29\"; line = \"94\" };\n                  lo = { Types.col = \"26\"; line = \"94\" } };\n                ty =\n                Types.Arrow {\n                  params =\n                  [(Types.Ref\n                      (Types.Region {todo = \"ReErased\"},\n                       Types.Adt {\n                         def_id =\n                         { Types.krate = \"std\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"sys\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"common\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"thread_local\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"fast_local\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Key\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"cell\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"RefCell\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.krate = \"core\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"option\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Option\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.krate = \"mini_ledger\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"Ledger\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                       ]})\n                                 ]})\n                           ]},\n                       false));\n                    Types.Arrow {params = [];\n                      ret =\n                      Types.Adt {\n                        def_id =\n                        { Types.krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"cell\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"RefCell\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"option\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Option\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.krate = \"mini_ledger\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"Ledger\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []})\n                                ]})\n                          ]}}\n                    ];\n                  ret =\n                  Types.Adt {\n                    def_id =\n                    { Types.krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"option\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Option\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        (Types.Ref\n                           (Types.Region {todo = \"ReStatic\"},\n                            Types.Adt {\n                              def_id =\n                              { Types.krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"cell\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"RefCell\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"option\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"Option\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.krate = \"mini_ledger\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"Ledger\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []})\n                                      ]})\n                                ]},\n                            false)))\n                      ]}}\n                };\n              ty =\n              Types.Arrow {\n                params =\n                [(Types.Ref\n                    (Types.Region {todo = \"ReErased\"},\n                     Types.Adt {\n                       def_id =\n                       { Types.krate = \"std\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"sys\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"common\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"thread_local\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"fast_local\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Key\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"cell\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"RefCell\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"option\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"Option\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.krate = \"mini_ledger\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"Ledger\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []})\n                                     ]})\n                               ]})\n                         ]},\n                     false));\n                  Types.Arrow {params = [];\n                    ret =\n                    Types.Adt {\n                      def_id =\n                      { Types.krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"cell\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"RefCell\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"option\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Option\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.krate = \"mini_ledger\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"Ledger\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []})\n                              ]})\n                        ]}}\n                  ];\n                ret =\n                Types.Adt {\n                  def_id =\n                  { Types.krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"option\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"Option\");\n                        disambiguator = 0 }\n                      ]\n                    };\n                  generic_args =\n                  [(Types.Type\n                      (Types.Ref\n                         (Types.Region {todo = \"ReStatic\"},\n                          Types.Adt {\n                            def_id =\n                            { Types.krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"cell\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"RefCell\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"option\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Option\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.krate = \"mini_ledger\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"Ledger\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []})\n                                    ]})\n                              ]},\n                          false)))\n                    ]}}};\n            hir_id = (Some (\"47\", \"5\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 Types.Remapped {\n                   local_path =\n                   (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n                   virtual_name =\n                   \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n              hi = { Types.col = \"22\"; line = \"103\" };\n              lo = { Types.col = \"20\"; line = \"94\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  (Types.Ref\n                     (Types.Region {todo = \"ReErased\"},\n                      Types.Adt {\n                        def_id =\n                        { Types.krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"cell\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"RefCell\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"option\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Option\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.krate = \"mini_ledger\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"Ledger\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []})\n                                ]})\n                          ]},\n                      false)))\n                ]}\n            });\n    opt_destruction_scope = None;\n    region_scope = { Types.data = Types.Node; id = \"74\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         Types.Remapped {\n           local_path =\n           (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n           virtual_name =\n           \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n      hi = { Types.col = \"17\"; line = \"104\" };\n      lo = { Types.col = \"16\"; line = \"93\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"47\", \"4\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       Types.Remapped {\n         local_path =\n         (Some \"/Users/franziskus/.rustup/toolchains/nightly-2023-06-02-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/sys/common/thread_local/fast_local.rs\");\n         virtual_name =\n         \"/rustc/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753/library/std/src/sys/common/thread_local/fast_local.rs\"});\n    hi = { Types.col = \"17\"; line = \"104\" };\n    lo = { Types.col = \"16\"; line = \"93\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        (Types.Ref\n           (Types.Region {todo = \"ReErased\"},\n            Types.Adt {\n              def_id =\n              { Types.krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"cell\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"RefCell\"); disambiguator = 0\n                    }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"option\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Option\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.krate = \"mini_ledger\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"Ledger\");\n                               disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                      ]})\n                ]},\n            false)))\n      ]}\n  }")
    }
}
 *)

class t_LedgerAccess (v_Self: Type) = {
  ledger:Type;
  ledger_implements_t_LedgerData:t_LedgerData _;
  ledger_implements_t_Sized:Core.Marker.t_Sized _;
  with_ledger:impl fnonce(&self::ledger) -> r -> r
}

type t_Access = | Access : t_Access

let impl: t_LedgerAccess t_Access = { ledger = t_Ledger }

let init_0__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"init_0_\\\"); disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {expr = None; opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"32\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                         ty =\\n                         Types.Arrow {params = [];\\n                           ret =\\n                           (Types.Tuple\\n                              [Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []}\\n                                ])}\\n                         };\\n                       ty =\\n                       Types.Arrow {params = [];\\n                         ret =\\n                         (Types.Tuple\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                                    disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ])}};\\n                     hir_id = (Some (\\\"58\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents =\\n               Types.Tuple {\\n                 subpatterns =\\n                 [{ Types.attributes = [];\\n                    contents =\\n                    Types.Binding {is_primary = true; mode = Types.ByValue;\\n                      mutability = false; subpattern = None;\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"mini_ledger\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                             disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []};\\n                      var =\\n                      { Types.id =\\n                        { Types.local_id = \\\"22\\\";\\n                          owner =\\n                          { Types.krate = \\\"mini_ledger\\\";\\n                            path =\\n                            [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                               disambiguator = 0 }\\n                              ]\\n                            }\\n                          };\\n                        name = \\\"args\\\" }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"12\\\"; line = \\\"67\\\" };\\n                      lo = { Types.col = \\\"8\\\"; line = \\\"67\\\" } };\\n                    ty =\\n                    Types.Adt {\\n                      def_id =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args = []}\\n                    }\\n                   ]};\\n               hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n               ty =\\n               (Types.Tuple\\n                  [Types.Adt {\\n                     def_id =\\n                     { Types.krate = \\\"mini_ledger\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []}\\n                    ])\\n               };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"32\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"24\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {\\n                        args =\\n                        [{ Types.attributes = [];\\n                           contents =\\n                           Types.VarRef {\\n                             id =\\n                             { Types.id =\\n                               { Types.local_id = \\\"22\\\";\\n                                 owner =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   }\\n                                 };\\n                               name = \\\"args\\\" }};\\n                           hir_id = (Some (\\\"58\\\", \\\"28\\\"));\\n                           span =\\n                           { Types.filename =\\n                             (Types.Real\\n                                (Types.LocalPath\\n                                   \\\"src/mini_ledger/src/main.rs\\\"));\\n                             hi = { Types.col = \\\"12\\\"; line = \\\"67\\\" };\\n                             lo = { Types.col = \\\"8\\\"; line = \\\"67\\\" } };\\n                           ty =\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                                  disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                           }\\n                          ];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data = (Types.ValueNs \\\"init\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"7\\\"; line = \\\"67\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"67\\\" } };\\n                          ty =\\n                          Types.Arrow {\\n                            params =\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                                    disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ];\\n                            ret = (Types.Tuple [])}\\n                          };\\n                        ty =\\n                        Types.Arrow {\\n                          params =\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"InitArgs\\\");\\n                                  disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ];\\n                          ret = (Types.Tuple [])}};\\n                      hir_id = (Some (\\\"58\\\", \\\"25\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                      ty = (Types.Tuple []) });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"30\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty = (Types.Tuple []);\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"31\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                ty = (Types.Tuple []) };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"32\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"24\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"58\\\", \\\"33\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"init_0_\\\"); disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"init_0_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"58\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"7\\\"; line = \\\"66\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"66\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"init_0_\\\"); disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let pre_upgrade_1__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {expr = None; opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"20\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.ValueNs \\\"pre_upgrade\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"14\\\"; line = \\\"73\\\" };\\n                           lo = { Types.col = \\\"3\\\"; line = \\\"73\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"62\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"18\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents =\\n               Types.Binding {is_primary = true; mode = Types.ByValue;\\n                 mutability = false; subpattern = None;\\n                 ty = (Types.Tuple []);\\n                 var =\\n                 { Types.id =\\n                   { Types.local_id = \\\"19\\\";\\n                     owner =\\n                     { Types.krate = \\\"mini_ledger\\\";\\n                       path =\\n                       [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       }\\n                     };\\n                   name = \\\"result\\\" }};\\n               hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"20\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"62\\\", \\\"21\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"62\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"14\\\"; line = \\\"72\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"72\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"pre_upgrade_1_\\\"); disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let pre_upgrade: Prims.unit =
  let _:Prims.unit =
    Core.Result.expect_under_impl (Mini_ledger.LedgerAccess.with_ledger (fun ledger ->
              Ciborium.Ser.into_writer ledger
                (Core.Default.Default.v_default
                  <:
                  Ic_cdk.Api.Stable.t_StableWriter Ic_cdk.Api.Stable.Canister.t_CanisterStableMemory
                )
              <:
              Core.Result.t_Result Prims.unit (Ciborium.Ser.Error.t_Error _))
        <:
        Core.Result.t_Result Prims.unit (Ciborium.Ser.Error.t_Error Std.Io.Error.t_Error))
      "failed to encode ledger state"
  in
  ()

let post_upgrade_2__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {expr = None; opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"20\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.ValueNs \\\"post_upgrade\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"15\\\"; line = \\\"80\\\" };\\n                           lo = { Types.col = \\\"3\\\"; line = \\\"80\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"66\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"18\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents =\\n               Types.Binding {is_primary = true; mode = Types.ByValue;\\n                 mutability = false; subpattern = None;\\n                 ty = (Types.Tuple []);\\n                 var =\\n                 { Types.id =\\n                   { Types.local_id = \\\"19\\\";\\n                     owner =\\n                     { Types.krate = \\\"mini_ledger\\\";\\n                       path =\\n                       [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       }\\n                     };\\n                   name = \\\"result\\\" }};\\n               hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"20\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"66\\\", \\\"21\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"66\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"15\\\"; line = \\\"79\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"79\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"post_upgrade_2_\\\"); disambiguator = 0\\n           };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_name_3__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\"); disambiguator = 0\\n              };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"28\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"70\\\", \\\"36\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"String\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"70\\\", \\\"35\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"alloc\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"String\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"alloc\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"String\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"alloc\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"String\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"70\\\", \\\"29\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"38\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"70\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents = Types.Tuple {subpatterns = []}; hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"38\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"23\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {args = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data = (Types.ValueNs \\\"icrc1_name\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"13\\\"; line = \\\"91\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"91\\\" } };\\n                          ty =\\n                          Types.Arrow {params = [];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"alloc\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"String\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []}}\\n                          };\\n                        ty =\\n                        Types.Arrow {params = [];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"String\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}}};\\n                      hir_id = (Some (\\\"70\\\", \\\"24\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"alloc\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"String\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"27\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"alloc\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"String\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"28\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"alloc\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"String\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"38\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"23\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"70\\\", \\\"39\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"70\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"89\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"89\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_name_3_\\\"); disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_name: Alloc.String.t_String =
  Mini_ledger.LedgerAccess.with_ledger (fun ledger ->
        Alloc.String.ToString.to_string (Mini_ledger.LedgerData.token_name ledger <: string)
        <:
        Alloc.String.t_String)

let icrc1_symbol_4__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"28\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"74\\\", \\\"36\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"String\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"74\\\", \\\"35\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"alloc\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"String\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"alloc\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"String\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"alloc\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"String\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"74\\\", \\\"29\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"38\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"74\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents = Types.Tuple {subpatterns = []}; hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"38\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"23\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {args = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data = (Types.ValueNs \\\"icrc1_symbol\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"15\\\"; line = \\\"97\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"97\\\" } };\\n                          ty =\\n                          Types.Arrow {params = [];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"alloc\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"String\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []}}\\n                          };\\n                        ty =\\n                        Types.Arrow {params = [];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"String\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}}};\\n                      hir_id = (Some (\\\"74\\\", \\\"24\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"alloc\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"String\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"27\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"alloc\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"String\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"28\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"alloc\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"String\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"38\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"23\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"74\\\", \\\"39\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"74\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"95\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"95\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_symbol_4_\\\"); disambiguator = 0\\n           };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_symbol: Alloc.String.t_String =
  Mini_ledger.LedgerAccess.with_ledger (fun ledger ->
        Alloc.String.ToString.to_string (Mini_ledger.LedgerData.token_symbol ledger <: string)
        <:
        Alloc.String.t_String)

let icrc1_decimals_5__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"28\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"78\\\", \\\"36\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                          ty = (Types.Uint Types.U8) }\\n                         ]};\\n                     hir_id = (Some (\\\"78\\\", \\\"35\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                     ty = (Types.Tuple [(Types.Uint Types.U8)]) }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params = [(Types.Tuple [(Types.Uint Types.U8)])];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params = [(Types.Tuple [(Types.Uint Types.U8)])];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"78\\\", \\\"29\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"38\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"78\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents = Types.Tuple {subpatterns = []}; hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"38\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"23\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {args = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.ValueNs \\\"icrc1_decimals\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"17\\\"; line = \\\"103\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"103\\\" } };\\n                          ty =\\n                          Types.Arrow {params = [];\\n                            ret = (Types.Uint Types.U8)}\\n                          };\\n                        ty =\\n                        Types.Arrow {params = []; ret = (Types.Uint Types.U8)}};\\n                      hir_id = (Some (\\\"78\\\", \\\"24\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                      ty = (Types.Uint Types.U8) });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"27\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty = (Types.Uint Types.U8);\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"28\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                ty = (Types.Uint Types.U8) };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"38\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"23\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"78\\\", \\\"39\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"78\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"101\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"101\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_decimals_5_\\\");\\n           disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_decimals: u8 =
  let _:Prims.unit =
    if true
    then
      let _:Prims.unit =
        if ~.(Mini_ledger_core.Tokens.v_DECIMAL_PLACES <=. cast Core.Num.v_MAX_under_impl_6 <: bool)
        then
          Rust_primitives.Hax.never_to_any (Core.Panicking.panic "assertion failed: mini_ledger_core::tokens::DECIMAL_PLACES <= u8::MAX as u32"

              <:
              Rust_primitives.Hax.t_Never)
      in
      ()
  in
  cast Mini_ledger_core.Tokens.v_DECIMAL_PLACES

let icrc1_fee_6__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\"); disambiguator = 0\\n              };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"28\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"81\\\", \\\"36\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"candid\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"number\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"81\\\", \\\"35\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"candid\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"number\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"candid\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"number\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"candid\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"number\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"81\\\", \\\"29\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"38\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"81\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents = Types.Tuple {subpatterns = []}; hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"38\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"23\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {args = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data = (Types.ValueNs \\\"icrc1_fee\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"12\\\"; line = \\\"110\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"110\\\" } };\\n                          ty =\\n                          Types.Arrow {params = [];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"candid\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"number\\\");\\n                                    disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []}}\\n                          };\\n                        ty =\\n                        Types.Arrow {params = [];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"candid\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"number\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}}};\\n                      hir_id = (Some (\\\"81\\\", \\\"24\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"candid\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"number\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"27\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"candid\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"number\\\");\\n                          disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"28\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"candid\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"types\\\"); disambiguator = 0\\n                       };\\n                      { Types.data = (Types.TypeNs \\\"number\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"Nat\\\"); disambiguator = 0\\n                        }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"38\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"23\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"81\\\", \\\"39\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"81\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"108\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"108\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_fee_6_\\\"); disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_fee: Candid.Types.Number.t_Nat =
  Core.Convert.From.from (Mini_ledger_core.Tokens.get_e8s_under_impl (Mini_ledger.LedgerAccess.with_ledger
            (fun ledger -> transfer_fee_under_impl_7 ledger <: Mini_ledger_core.Tokens.t_Tokens)
          <:
          Mini_ledger_core.Tokens.t_Tokens)
      <:
      u64)

let icrc1_minting_account_7__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"28\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs\\n                                        \\\"icrc1_minting_account_7_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"85\\\", \\\"36\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.krate = \\\"mini_ledger\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []})\\n                              ]}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"85\\\", \\\"35\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []})\\n                             ]}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.krate = \\\"mini_ledger\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"Account\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []})\\n                               ]}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []})\\n                             ]}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"85\\\", \\\"29\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"38\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"85\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data =\\n                       (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents = Types.Tuple {subpatterns = []}; hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"38\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"23\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {args = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.ValueNs \\\"icrc1_minting_account\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"24\\\"; line = \\\"116\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"116\\\" } };\\n                          ty =\\n                          Types.Arrow {params = [];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.krate = \\\"mini_ledger\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"account\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"Account\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []})\\n                                ]}}\\n                          };\\n                        ty =\\n                        Types.Arrow {params = [];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.krate = \\\"mini_ledger\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []})\\n                              ]}}};\\n                      hir_id = (Some (\\\"85\\\", \\\"24\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Option\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"mini_ledger\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []})\\n                          ]}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"27\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data =\\n                        (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Option\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args =\\n                    [(Types.Type\\n                        Types.Adt {\\n                          def_id =\\n                          { Types.krate = \\\"mini_ledger\\\";\\n                            path =\\n                            [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                               disambiguator = 0 };\\n                              { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                disambiguator = 0 }\\n                              ]\\n                            };\\n                          generic_args = []})\\n                      ]};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"28\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data =\\n                           (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"Option\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args =\\n                  [(Types.Type\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"mini_ledger\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Account\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []})\\n                    ]}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"38\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"23\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"85\\\", \\\"39\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data =\\n                           (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"85\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"114\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"114\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_minting_account_7_\\\");\\n           disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_minting_account: Core.Option.t_Option Mini_ledger.Account.t_Account =
  Mini_ledger.LedgerAccess.with_ledger (fun ledger ->
        Core.Option.Option_Some
        (Core.Clone.Clone.clone (minting_account_under_impl_7 ledger
              <:
              Mini_ledger.Account.t_Account)
          <:
          Mini_ledger.Account.t_Account))

let icrc1_balance_of_8__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"31\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"89\\\", \\\"39\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"candid\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"number\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"89\\\", \\\"38\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"candid\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"number\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"candid\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"number\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"candid\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"number\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"89\\\", \\\"32\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"41\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                         ty =\\n                         Types.Arrow {params = [];\\n                           ret =\\n                           (Types.Tuple\\n                              [Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []}\\n                                ])}\\n                         };\\n                       ty =\\n                       Types.Arrow {params = [];\\n                         ret =\\n                         (Types.Tuple\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ])}};\\n                     hir_id = (Some (\\\"89\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents =\\n               Types.Tuple {\\n                 subpatterns =\\n                 [{ Types.attributes = [];\\n                    contents =\\n                    Types.Binding {is_primary = true; mode = Types.ByValue;\\n                      mutability = false; subpattern = None;\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"mini_ledger\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Account\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []};\\n                      var =\\n                      { Types.id =\\n                        { Types.local_id = \\\"22\\\";\\n                          owner =\\n                          { Types.krate = \\\"mini_ledger\\\";\\n                            path =\\n                            [{ Types.data =\\n                               (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                               disambiguator = 0 }\\n                              ]\\n                            }\\n                          };\\n                        name = \\\"account\\\" }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"27\\\"; line = \\\"122\\\" };\\n                      lo = { Types.col = \\\"20\\\"; line = \\\"122\\\" } };\\n                    ty =\\n                    Types.Adt {\\n                      def_id =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"Account\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args = []}\\n                    }\\n                   ]};\\n               hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n               ty =\\n               (Types.Tuple\\n                  [Types.Adt {\\n                     def_id =\\n                     { Types.krate = \\\"mini_ledger\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                          disambiguator = 0 };\\n                         { Types.data = (Types.TypeNs \\\"Account\\\");\\n                           disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []}\\n                    ])\\n               };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"41\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"24\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {\\n                        args =\\n                        [{ Types.attributes = [];\\n                           contents =\\n                           Types.VarRef {\\n                             id =\\n                             { Types.id =\\n                               { Types.local_id = \\\"22\\\";\\n                                 owner =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data =\\n                                      (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   }\\n                                 };\\n                               name = \\\"account\\\" }};\\n                           hir_id = (Some (\\\"89\\\", \\\"28\\\"));\\n                           span =\\n                           { Types.filename =\\n                             (Types.Real\\n                                (Types.LocalPath\\n                                   \\\"src/mini_ledger/src/main.rs\\\"));\\n                             hi = { Types.col = \\\"27\\\"; line = \\\"122\\\" };\\n                             lo = { Types.col = \\\"20\\\"; line = \\\"122\\\" } };\\n                           ty =\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                           }\\n                          ];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.ValueNs \\\"icrc1_balance_of\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"19\\\"; line = \\\"122\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"122\\\" } };\\n                          ty =\\n                          Types.Arrow {\\n                            params =\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"candid\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"number\\\");\\n                                    disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []}}\\n                          };\\n                        ty =\\n                        Types.Arrow {\\n                          params =\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"account\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Account\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"candid\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"number\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}}};\\n                      hir_id = (Some (\\\"89\\\", \\\"25\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"candid\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"number\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"30\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"candid\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"number\\\");\\n                          disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"31\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"candid\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"types\\\"); disambiguator = 0\\n                       };\\n                      { Types.data = (Types.TypeNs \\\"number\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"Nat\\\"); disambiguator = 0\\n                        }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"41\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"24\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"89\\\", \\\"42\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"89\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"35\\\"; line = \\\"120\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"120\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_balance_of_8_\\\");\\n           disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let icrc1_balance_of (account: Mini_ledger.Account.t_Account) : Candid.Types.Number.t_Nat =
  Mini_ledger.LedgerAccess.with_ledger (fun ledger ->
        Core.Convert.From.from (Mini_ledger_core.Tokens.get_e8s_under_impl (Mini_ledger_core.Balances.account_balance_under_impl_2
                  (Mini_ledger.LedgerData.balances ledger
                    <:
                    Mini_ledger_core.Balances.t_Balances Mini_ledger.Account.t_Account
                      (Std.Collections.Hash.Map.t_HashMap Mini_ledger.Account.t_Account
                          Mini_ledger_core.Tokens.t_Tokens
                          Std.Collections.Hash.Map.t_RandomState))
                  account
                <:
                Mini_ledger_core.Tokens.t_Tokens)
            <:
            u64)
        <:
        Candid.Types.Number.t_Nat)

let icrc1_transfer_9__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type\\n              (Types.Todo\\n                 \\\"GeneratorWitness(Binder([std::future::ResumeTy, mini_ledger::endpoints::TransferArg, impl std::future::Future<Output = std::result::Result<candid::Nat, mini_ledger::endpoints::TransferError>>, ()], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"70\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"93\\\", \\\"78\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Result\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.krate = \\\"candid\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"number\\\");\\n                                        disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []});\\n                              (Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.krate = \\\"mini_ledger\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.TypeNs \\\"endpoints\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"TransferError\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []})\\n                              ]}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"93\\\", \\\"77\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Result\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"candid\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"number\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []});\\n                             (Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.krate = \\\"mini_ledger\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"endpoints\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data =\\n                                        (Types.TypeNs \\\"TransferError\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []})\\n                             ]}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Result\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.krate = \\\"candid\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"number\\\");\\n                                         disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []});\\n                               (Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.krate = \\\"mini_ledger\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"endpoints\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"TransferError\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []})\\n                               ]}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Result\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"candid\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"number\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []});\\n                             (Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.krate = \\\"mini_ledger\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"endpoints\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data =\\n                                        (Types.TypeNs \\\"TransferError\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []})\\n                             ]}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"93\\\", \\\"71\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"80\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                         ty =\\n                         Types.Arrow {params = [];\\n                           ret =\\n                           (Types.Tuple\\n                              [Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data =\\n                                       (Types.TypeNs \\\"TransferArg\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []}\\n                                ])}\\n                         };\\n                       ty =\\n                       Types.Arrow {params = [];\\n                         ret =\\n                         (Types.Tuple\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data =\\n                                     (Types.TypeNs \\\"TransferArg\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ])}};\\n                     hir_id = (Some (\\\"93\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"TransferArg\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents =\\n               Types.Tuple {\\n                 subpatterns =\\n                 [{ Types.attributes = [];\\n                    contents =\\n                    Types.Binding {is_primary = true; mode = Types.ByValue;\\n                      mutability = false; subpattern = None;\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"mini_ledger\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"TransferArg\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []};\\n                      var =\\n                      { Types.id =\\n                        { Types.local_id = \\\"22\\\";\\n                          owner =\\n                          { Types.krate = \\\"mini_ledger\\\";\\n                            path =\\n                            [{ Types.data =\\n                               (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                               disambiguator = 0 }\\n                              ]\\n                            }\\n                          };\\n                        name = \\\"arg\\\" }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"27\\\"; line = \\\"129\\\" };\\n                      lo = { Types.col = \\\"24\\\"; line = \\\"129\\\" } };\\n                    ty =\\n                    Types.Adt {\\n                      def_id =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"TransferArg\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args = []}\\n                    }\\n                   ]};\\n               hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n               ty =\\n               (Types.Tuple\\n                  [Types.Adt {\\n                     def_id =\\n                     { Types.krate = \\\"mini_ledger\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                          disambiguator = 0 };\\n                         { Types.data = (Types.TypeNs \\\"TransferArg\\\");\\n                           disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []}\\n                    ])\\n               };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"80\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"24\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Match {\\n                        arms =\\n                        [{ Types.attributes = [];\\n                           body =\\n                           { Types.attributes = [];\\n                             contents =\\n                             Types.Loop {\\n                               body =\\n                               { Types.attributes = [];\\n                                 contents =\\n                                 Types.Block {expr = None;\\n                                   opt_destruction_scope =\\n                                   (Some { Types.data = Types.Destruction;\\n                                           id = \\\"65\\\" });\\n                                   region_scope =\\n                                   { Types.data = Types.Node; id = \\\"65\\\" };\\n                                   safety_mode = Types.Safe;\\n                                   span =\\n                                   { Types.filename =\\n                                     (Types.Real\\n                                        (Types.LocalPath\\n                                           \\\"src/mini_ledger/src/main.rs\\\"));\\n                                     hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                                     lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                                   stmts =\\n                                   [{ Types.kind =\\n                                      Types.Expr {\\n                                        expr =\\n                                        { Types.attributes = [];\\n                                          contents =\\n                                          Types.Match {\\n                                            arms =\\n                                            [{ Types.attributes = [];\\n                                               body =\\n                                               { Types.attributes = [];\\n                                                 contents =\\n                                                 Types.NeverToAny {\\n                                                   source =\\n                                                   { Types.attributes = [];\\n                                                     contents =\\n                                                     Types.Break {\\n                                                       label =\\n                                                       { Types.data =\\n                                                         Types.Node;\\n                                                         id = \\\"45\\\" };\\n                                                       value =\\n                                                       (Some { Types.attributes =\\n                                                               [];\\n                                                               contents =\\n                                                               Types.VarRef {\\n                                                                 id =\\n                                                                 { Types.id =\\n                                                                   { Types.local_id =\\n                                                                    \\\"46\\\";\\n                                                                    owner =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer_9_\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] } };\\n                                                                   name =\\n                                                                   \\\"result\\\" }};\\n                                                               hir_id =\\n                                                               (Some (\\n                                                               \\\"93\\\", \\\"48\\\"));\\n                                                               span =\\n                                                               { Types.filename =\\n                                                                 (Types.Real\\n                                                                    (\\n                                                                    Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                 hi =\\n                                                                 { Types.col =\\n                                                                   \\\"9\\\";\\n                                                                   line =\\n                                                                   \\\"127\\\" };\\n                                                                 lo =\\n                                                                 { Types.col =\\n                                                                   \\\"0\\\";\\n                                                                   line =\\n                                                                   \\\"127\\\" }\\n                                                                 };\\n                                                               ty =\\n                                                               Types.Adt {\\n                                                                 def_id =\\n                                                                 { Types.krate =\\n                                                                   \\\"core\\\";\\n                                                                   path =\\n                                                                   [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"result\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Result\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                   };\\n                                                                 generic_args =\\n                                                                 [(Types.Type\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"candid\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []});\\n                                                                   (Types.Type\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []})\\n                                                                   ]}\\n                                                               })};\\n                                                     hir_id = None;\\n                                                     span =\\n                                                     { Types.filename =\\n                                                       (Types.Real\\n                                                          (Types.LocalPath\\n                                                             \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                       hi =\\n                                                       { Types.col = \\\"9\\\";\\n                                                         line = \\\"127\\\" };\\n                                                       lo =\\n                                                       { Types.col = \\\"0\\\";\\n                                                         line = \\\"127\\\" }\\n                                                       };\\n                                                     ty = Types.Never }};\\n                                                 hir_id = (Some (\\\"93\\\", \\\"51\\\"));\\n                                                 span =\\n                                                 { Types.filename =\\n                                                   (Types.Real\\n                                                      (Types.LocalPath\\n                                                         \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                   hi =\\n                                                   { Types.col = \\\"9\\\";\\n                                                     line = \\\"127\\\" };\\n                                                   lo =\\n                                                   { Types.col = \\\"0\\\";\\n                                                     line = \\\"127\\\" }\\n                                                   };\\n                                                 ty = (Types.Tuple []) };\\n                                               guard = None;\\n                                               lint_level =\\n                                               (Types.Explicit\\n                                                  { Types.local_id = \\\"52\\\";\\n                                                    owner =\\n                                                    { Types.krate =\\n                                                      \\\"mini_ledger\\\";\\n                                                      path =\\n                                                      [{ Types.data =\\n                                                         (Types.ValueNs\\n                                                            \\\"icrc1_transfer_9_\\\");\\n                                                         disambiguator = 0 }\\n                                                        ]\\n                                                      }\\n                                                    });\\n                                               pattern =\\n                                               { Types.attributes = [];\\n                                                 contents =\\n                                                 Types.Variant {\\n                                                   info =\\n                                                   { Types.typ =\\n                                                     { Types.krate = \\\"core\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"task\\\");\\n                                                          disambiguator = 0 };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"poll\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"Poll\\\");\\n                                                           disambiguator = 0\\n                                                           }\\n                                                         ]\\n                                                       };\\n                                                     typ_is_record = false;\\n                                                     typ_is_struct = false;\\n                                                     type_namespace =\\n                                                     { Types.krate = \\\"core\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"task\\\");\\n                                                          disambiguator = 0 };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"poll\\\");\\n                                                           disambiguator = 0\\n                                                           }\\n                                                         ]\\n                                                       };\\n                                                     variant =\\n                                                     { Types.krate = \\\"core\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"task\\\");\\n                                                          disambiguator = 0 };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"poll\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"Poll\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"Ready\\\");\\n                                                           disambiguator = 0\\n                                                           }\\n                                                         ]\\n                                                       };\\n                                                     variant_is_record =\\n                                                     false };\\n                                                   subpatterns =\\n                                                   [{ Types.field =\\n                                                      { Types.krate = \\\"core\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"task\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"poll\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"Poll\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"Ready\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.ValueNs\\n                                                               \\\"0\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        };\\n                                                      pattern =\\n                                                      { Types.attributes = [];\\n                                                        contents =\\n                                                        Types.Binding {\\n                                                          is_primary = true;\\n                                                          mode =\\n                                                          Types.ByValue;\\n                                                          mutability = false;\\n                                                          subpattern = None;\\n                                                          ty =\\n                                                          Types.Adt {\\n                                                            def_id =\\n                                                            { Types.krate =\\n                                                              \\\"core\\\";\\n                                                              path =\\n                                                              [{ Types.data =\\n                                                                 (Types.TypeNs\\n                                                                    \\\"result\\\");\\n                                                                 disambiguator =\\n                                                                 0 };\\n                                                                { Types.data =\\n                                                                  (Types.TypeNs\\n                                                                    \\\"Result\\\");\\n                                                                  disambiguator =\\n                                                                  0 }\\n                                                                ]\\n                                                              };\\n                                                            generic_args =\\n                                                            [(Types.Type\\n                                                                Types.Adt {\\n                                                                  def_id =\\n                                                                  { Types.krate =\\n                                                                    \\\"candid\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                  generic_args =\\n                                                                  []});\\n                                                              (Types.Type\\n                                                                 Types.Adt {\\n                                                                   def_id =\\n                                                                   { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                   generic_args =\\n                                                                   []})\\n                                                              ]};\\n                                                          var =\\n                                                          { Types.id =\\n                                                            { Types.local_id =\\n                                                              \\\"46\\\";\\n                                                              owner =\\n                                                              { Types.krate =\\n                                                                \\\"mini_ledger\\\";\\n                                                                path =\\n                                                                [{ Types.data =\\n                                                                   (Types.ValueNs\\n                                                                    \\\"icrc1_transfer_9_\\\");\\n                                                                   disambiguator =\\n                                                                   0 }\\n                                                                  ]\\n                                                                }\\n                                                              };\\n                                                            name = \\\"result\\\" }};\\n                                                        hir_id = None;\\n                                                        span =\\n                                                        { Types.filename =\\n                                                          (Types.Real\\n                                                             (Types.LocalPath\\n                                                                \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                          hi =\\n                                                          { Types.col = \\\"9\\\";\\n                                                            line = \\\"127\\\" };\\n                                                          lo =\\n                                                          { Types.col = \\\"0\\\";\\n                                                            line = \\\"127\\\" }\\n                                                          };\\n                                                        ty =\\n                                                        Types.Adt {\\n                                                          def_id =\\n                                                          { Types.krate =\\n                                                            \\\"core\\\";\\n                                                            path =\\n                                                            [{ Types.data =\\n                                                               (Types.TypeNs\\n                                                                  \\\"result\\\");\\n                                                               disambiguator =\\n                                                               0 };\\n                                                              { Types.data =\\n                                                                (Types.TypeNs\\n                                                                   \\\"Result\\\");\\n                                                                disambiguator =\\n                                                                0 }\\n                                                              ]\\n                                                            };\\n                                                          generic_args =\\n                                                          [(Types.Type\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"candid\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                []});\\n                                                            (Types.Type\\n                                                               Types.Adt {\\n                                                                 def_id =\\n                                                                 { Types.krate =\\n                                                                   \\\"mini_ledger\\\";\\n                                                                   path =\\n                                                                   [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                   };\\n                                                                 generic_args =\\n                                                                 []})\\n                                                            ]}\\n                                                        }\\n                                                      }\\n                                                     ];\\n                                                   substs =\\n                                                   [(Types.Type\\n                                                       Types.Adt {\\n                                                         def_id =\\n                                                         { Types.krate =\\n                                                           \\\"core\\\";\\n                                                           path =\\n                                                           [{ Types.data =\\n                                                              (Types.TypeNs\\n                                                                 \\\"result\\\");\\n                                                              disambiguator =\\n                                                              0 };\\n                                                             { Types.data =\\n                                                               (Types.TypeNs\\n                                                                  \\\"Result\\\");\\n                                                               disambiguator =\\n                                                               0 }\\n                                                             ]\\n                                                           };\\n                                                         generic_args =\\n                                                         [(Types.Type\\n                                                             Types.Adt {\\n                                                               def_id =\\n                                                               { Types.krate =\\n                                                                 \\\"candid\\\";\\n                                                                 path =\\n                                                                 [{ Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                   { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                   { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }\\n                                                                   ]\\n                                                                 };\\n                                                               generic_args =\\n                                                               []});\\n                                                           (Types.Type\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"mini_ledger\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                []})\\n                                                           ]})\\n                                                     ]};\\n                                                 hir_id = None;\\n                                                 span =\\n                                                 { Types.filename =\\n                                                   (Types.Real\\n                                                      (Types.LocalPath\\n                                                         \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                   hi =\\n                                                   { Types.col = \\\"9\\\";\\n                                                     line = \\\"127\\\" };\\n                                                   lo =\\n                                                   { Types.col = \\\"0\\\";\\n                                                     line = \\\"127\\\" }\\n                                                   };\\n                                                 ty =\\n                                                 Types.Adt {\\n                                                   def_id =\\n                                                   { Types.krate = \\\"core\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs \\\"task\\\");\\n                                                        disambiguator = 0 };\\n                                                       { Types.data =\\n                                                         (Types.TypeNs \\\"poll\\\");\\n                                                         disambiguator = 0 };\\n                                                       { Types.data =\\n                                                         (Types.TypeNs \\\"Poll\\\");\\n                                                         disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args =\\n                                                   [(Types.Type\\n                                                       Types.Adt {\\n                                                         def_id =\\n                                                         { Types.krate =\\n                                                           \\\"core\\\";\\n                                                           path =\\n                                                           [{ Types.data =\\n                                                              (Types.TypeNs\\n                                                                 \\\"result\\\");\\n                                                              disambiguator =\\n                                                              0 };\\n                                                             { Types.data =\\n                                                               (Types.TypeNs\\n                                                                  \\\"Result\\\");\\n                                                               disambiguator =\\n                                                               0 }\\n                                                             ]\\n                                                           };\\n                                                         generic_args =\\n                                                         [(Types.Type\\n                                                             Types.Adt {\\n                                                               def_id =\\n                                                               { Types.krate =\\n                                                                 \\\"candid\\\";\\n                                                                 path =\\n                                                                 [{ Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                   { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                   { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }\\n                                                                   ]\\n                                                                 };\\n                                                               generic_args =\\n                                                               []});\\n                                                           (Types.Type\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"mini_ledger\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                []})\\n                                                           ]})\\n                                                     ]}\\n                                                 };\\n                                               scope =\\n                                               { Types.data = Types.Node;\\n                                                 id = \\\"52\\\" };\\n                                               span =\\n                                               { Types.filename =\\n                                                 (Types.Real\\n                                                    (Types.LocalPath\\n                                                       \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                 hi =\\n                                                 { Types.col = \\\"9\\\";\\n                                                   line = \\\"127\\\" };\\n                                                 lo =\\n                                                 { Types.col = \\\"0\\\";\\n                                                   line = \\\"127\\\" }\\n                                                 }\\n                                               };\\n                                              { Types.attributes = [];\\n                                                body =\\n                                                { Types.attributes = [];\\n                                                  contents =\\n                                                  Types.Block {expr = None;\\n                                                    opt_destruction_scope =\\n                                                    None;\\n                                                    region_scope =\\n                                                    { Types.data = Types.Node;\\n                                                      id = \\\"54\\\" };\\n                                                    safety_mode = Types.Safe;\\n                                                    span =\\n                                                    { Types.filename =\\n                                                      (Types.Real\\n                                                         (Types.LocalPath\\n                                                            \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                      hi =\\n                                                      { Types.col = \\\"9\\\";\\n                                                        line = \\\"127\\\" };\\n                                                      lo =\\n                                                      { Types.col = \\\"0\\\";\\n                                                        line = \\\"127\\\" }\\n                                                      };\\n                                                    stmts = [];\\n                                                    targeted_by_break = false};\\n                                                  hir_id =\\n                                                  (Some (\\\"93\\\", \\\"55\\\"));\\n                                                  span =\\n                                                  { Types.filename =\\n                                                    (Types.Real\\n                                                       (Types.LocalPath\\n                                                          \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                    hi =\\n                                                    { Types.col = \\\"9\\\";\\n                                                      line = \\\"127\\\" };\\n                                                    lo =\\n                                                    { Types.col = \\\"0\\\";\\n                                                      line = \\\"127\\\" }\\n                                                    };\\n                                                  ty = (Types.Tuple []) };\\n                                                guard = None;\\n                                                lint_level =\\n                                                (Types.Explicit\\n                                                   { Types.local_id = \\\"56\\\";\\n                                                     owner =\\n                                                     { Types.krate =\\n                                                       \\\"mini_ledger\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.ValueNs\\n                                                             \\\"icrc1_transfer_9_\\\");\\n                                                          disambiguator = 0 }\\n                                                         ]\\n                                                       }\\n                                                     });\\n                                                pattern =\\n                                                { Types.attributes = [];\\n                                                  contents =\\n                                                  Types.Variant {\\n                                                    info =\\n                                                    { Types.typ =\\n                                                      { Types.krate = \\\"core\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"task\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"poll\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"Poll\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        };\\n                                                      typ_is_record = false;\\n                                                      typ_is_struct = false;\\n                                                      type_namespace =\\n                                                      { Types.krate = \\\"core\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"task\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"poll\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        };\\n                                                      variant =\\n                                                      { Types.krate = \\\"core\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"task\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"poll\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"Poll\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"Pending\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        };\\n                                                      variant_is_record =\\n                                                      false };\\n                                                    subpatterns = [];\\n                                                    substs =\\n                                                    [(Types.Type\\n                                                        Types.Adt {\\n                                                          def_id =\\n                                                          { Types.krate =\\n                                                            \\\"core\\\";\\n                                                            path =\\n                                                            [{ Types.data =\\n                                                               (Types.TypeNs\\n                                                                  \\\"result\\\");\\n                                                               disambiguator =\\n                                                               0 };\\n                                                              { Types.data =\\n                                                                (Types.TypeNs\\n                                                                   \\\"Result\\\");\\n                                                                disambiguator =\\n                                                                0 }\\n                                                              ]\\n                                                            };\\n                                                          generic_args =\\n                                                          [(Types.Type\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"candid\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                []});\\n                                                            (Types.Type\\n                                                               Types.Adt {\\n                                                                 def_id =\\n                                                                 { Types.krate =\\n                                                                   \\\"mini_ledger\\\";\\n                                                                   path =\\n                                                                   [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                   };\\n                                                                 generic_args =\\n                                                                 []})\\n                                                            ]})\\n                                                      ]};\\n                                                  hir_id = None;\\n                                                  span =\\n                                                  { Types.filename =\\n                                                    (Types.Real\\n                                                       (Types.LocalPath\\n                                                          \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                    hi =\\n                                                    { Types.col = \\\"9\\\";\\n                                                      line = \\\"127\\\" };\\n                                                    lo =\\n                                                    { Types.col = \\\"0\\\";\\n                                                      line = \\\"127\\\" }\\n                                                    };\\n                                                  ty =\\n                                                  Types.Adt {\\n                                                    def_id =\\n                                                    { Types.krate = \\\"core\\\";\\n                                                      path =\\n                                                      [{ Types.data =\\n                                                         (Types.TypeNs \\\"task\\\");\\n                                                         disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"poll\\\");\\n                                                          disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"Poll\\\");\\n                                                          disambiguator = 0 }\\n                                                        ]\\n                                                      };\\n                                                    generic_args =\\n                                                    [(Types.Type\\n                                                        Types.Adt {\\n                                                          def_id =\\n                                                          { Types.krate =\\n                                                            \\\"core\\\";\\n                                                            path =\\n                                                            [{ Types.data =\\n                                                               (Types.TypeNs\\n                                                                  \\\"result\\\");\\n                                                               disambiguator =\\n                                                               0 };\\n                                                              { Types.data =\\n                                                                (Types.TypeNs\\n                                                                   \\\"Result\\\");\\n                                                                disambiguator =\\n                                                                0 }\\n                                                              ]\\n                                                            };\\n                                                          generic_args =\\n                                                          [(Types.Type\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"candid\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                []});\\n                                                            (Types.Type\\n                                                               Types.Adt {\\n                                                                 def_id =\\n                                                                 { Types.krate =\\n                                                                   \\\"mini_ledger\\\";\\n                                                                   path =\\n                                                                   [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                   };\\n                                                                 generic_args =\\n                                                                 []})\\n                                                            ]})\\n                                                      ]}\\n                                                  };\\n                                                scope =\\n                                                { Types.data = Types.Node;\\n                                                  id = \\\"56\\\" };\\n                                                span =\\n                                                { Types.filename =\\n                                                  (Types.Real\\n                                                     (Types.LocalPath\\n                                                        \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                  hi =\\n                                                  { Types.col = \\\"9\\\";\\n                                                    line = \\\"127\\\" };\\n                                                  lo =\\n                                                  { Types.col = \\\"0\\\";\\n                                                    line = \\\"127\\\" }\\n                                                  }\\n                                                }\\n                                              ];\\n                                            scrutinee =\\n                                            { Types.attributes = [];\\n                                              contents =\\n                                              Types.Block {\\n                                                expr =\\n                                                (Some { Types.attributes = [];\\n                                                        contents =\\n                                                        Types.Call {\\n                                                          args =\\n                                                          [{ Types.attributes =\\n                                                             [];\\n                                                             contents =\\n                                                             Types.Call {\\n                                                               args =\\n                                                               [{ Types.attributes =\\n                                                                  [];\\n                                                                  contents =\\n                                                                  Types.Borrow {\\n                                                                    arg =\\n                                                                    { Types.attributes =\\n                                                                    [];\\n                                                                    contents =\\n                                                                    Types.Deref {\\n                                                                    arg =\\n                                                                    { Types.attributes =\\n                                                                    [];\\n                                                                    contents =\\n                                                                    Types.Borrow {\\n                                                                    arg =\\n                                                                    { Types.attributes =\\n                                                                    [];\\n                                                                    contents =\\n                                                                    Types.VarRef {\\n                                                                    id =\\n                                                                    { Types.id =\\n                                                                    { Types.local_id =\\n                                                                    \\\"31\\\";\\n                                                                    owner =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer_9_\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] } };\\n                                                                    name =\\n                                                                    \\\"__awaitee\\\"\\n                                                                    }};\\n                                                                    hir_id =\\n                                                                    (Some (\\n                                                                    \\\"93\\\",\\n                                                                    \\\"33\\\"));\\n                                                                    span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    ty =\\n                                                                    (\\n                                                                    Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None }))\\n                                                                    };\\n                                                                    borrow_kind =\\n                                                                    Types.Mut {\\n                                                                    allow_two_phase_borrow =\\n                                                                    false}};\\n                                                                    hir_id =\\n                                                                    None;\\n                                                                    span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    ty =\\n                                                                    (\\n                                                                    Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true)) }};\\n                                                                    hir_id =\\n                                                                    None;\\n                                                                    span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    ty =\\n                                                                    (\\n                                                                    Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None }))\\n                                                                    };\\n                                                                    borrow_kind =\\n                                                                    Types.Mut {\\n                                                                    allow_two_phase_borrow =\\n                                                                    true}};\\n                                                                  hir_id =\\n                                                                  (Some (\\n                                                                  \\\"93\\\", \\\"34\\\"));\\n                                                                  span =\\n                                                                  { Types.filename =\\n                                                                    (\\n                                                                    Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                  ty =\\n                                                                  (Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true))\\n                                                                  }\\n                                                                 ];\\n                                                               fn_span =\\n                                                               { Types.filename =\\n                                                                 (Types.Real\\n                                                                    (\\n                                                                    Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                 hi =\\n                                                                 { Types.col =\\n                                                                   \\\"9\\\";\\n                                                                   line =\\n                                                                   \\\"127\\\" };\\n                                                                 lo =\\n                                                                 { Types.col =\\n                                                                   \\\"0\\\";\\n                                                                   line =\\n                                                                   \\\"127\\\" }\\n                                                                 };\\n                                                               from_hir_call =\\n                                                               true;\\n                                                               fun' =\\n                                                               { Types.attributes =\\n                                                                 [];\\n                                                                 contents =\\n                                                                 Types.GlobalName {\\n                                                                   id =\\n                                                                   { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.Impl;\\n                                                                    disambiguator =\\n                                                                    6 };\\n                                                                    { Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"new_unchecked\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] }};\\n                                                                 hir_id =\\n                                                                 None;\\n                                                                 span =\\n                                                                 { Types.filename =\\n                                                                   (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                   hi =\\n                                                                   { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                   lo =\\n                                                                   { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" }\\n                                                                   };\\n                                                                 ty =\\n                                                                 Types.Arrow {\\n                                                                   params =\\n                                                                   [(Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true))];\\n                                                                   ret =\\n                                                                   Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Type\\n                                                                    (Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true)))]}}\\n                                                                 };\\n                                                               ty =\\n                                                               Types.Arrow {\\n                                                                 params =\\n                                                                 [(Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true))\\n                                                                   ];\\n                                                                 ret =\\n                                                                 Types.Adt {\\n                                                                   def_id =\\n                                                                   { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                   generic_args =\\n                                                                   [(Types.Type\\n                                                                    (Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true)))]}}};\\n                                                             hir_id =\\n                                                             (Some (\\\"93\\\",\\n                                                                    \\\"38\\\"));\\n                                                             span =\\n                                                             { Types.filename =\\n                                                               (Types.Real\\n                                                                  (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                               hi =\\n                                                               { Types.col =\\n                                                                 \\\"9\\\";\\n                                                                 line = \\\"127\\\"\\n                                                                 };\\n                                                               lo =\\n                                                               { Types.col =\\n                                                                 \\\"0\\\";\\n                                                                 line = \\\"127\\\"\\n                                                                 }\\n                                                               };\\n                                                             ty =\\n                                                             Types.Adt {\\n                                                               def_id =\\n                                                               { Types.krate =\\n                                                                 \\\"core\\\";\\n                                                                 path =\\n                                                                 [{ Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                   { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 }\\n                                                                   ]\\n                                                                 };\\n                                                               generic_args =\\n                                                               [(Types.Type\\n                                                                   (Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true)))\\n                                                                 ]}\\n                                                             };\\n                                                            { Types.attributes =\\n                                                              [];\\n                                                              contents =\\n                                                              Types.Borrow {\\n                                                                arg =\\n                                                                { Types.attributes =\\n                                                                  [];\\n                                                                  contents =\\n                                                                  Types.Deref {\\n                                                                    arg =\\n                                                                    { Types.attributes =\\n                                                                    [];\\n                                                                    contents =\\n                                                                    Types.Call {\\n                                                                    args =\\n                                                                    [{ Types.attributes =\\n                                                                    [];\\n                                                                    contents =\\n                                                                    Types.VarRef {\\n                                                                    id =\\n                                                                    { Types.id =\\n                                                                    { Types.local_id =\\n                                                                    \\\"12\\\";\\n                                                                    owner =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer_9_\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] } };\\n                                                                    name =\\n                                                                    \\\"_task_context\\\"\\n                                                                    }};\\n                                                                    hir_id =\\n                                                                    (Some (\\n                                                                    \\\"93\\\",\\n                                                                    \\\"36\\\"));\\n                                                                    span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    ty =\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"ResumeTy\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []} }];\\n                                                                    fn_span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    from_hir_call =\\n                                                                    true;\\n                                                                    fun' =\\n                                                                    { Types.attributes =\\n                                                                    [];\\n                                                                    contents =\\n                                                                    Types.GlobalName {\\n                                                                    id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"get_context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] }};\\n                                                                    hir_id =\\n                                                                    None;\\n                                                                    span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    ty =\\n                                                                    Types.Arrow {\\n                                                                    params =\\n                                                                    [Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"ResumeTy\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []}];\\n                                                                    ret =\\n                                                                    (\\n                                                                    Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]}, true))}\\n                                                                    };\\n                                                                    ty =\\n                                                                    Types.Arrow {\\n                                                                    params =\\n                                                                    [Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"ResumeTy\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []}];\\n                                                                    ret =\\n                                                                    (\\n                                                                    Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]}, true))}};\\n                                                                    hir_id =\\n                                                                    None;\\n                                                                    span =\\n                                                                    { Types.filename =\\n                                                                    (Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                    ty =\\n                                                                    (\\n                                                                    Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]}, true))\\n                                                                    }};\\n                                                                  hir_id =\\n                                                                  None;\\n                                                                  span =\\n                                                                  { Types.filename =\\n                                                                    (\\n                                                                    Types.Real\\n                                                                    (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                    hi =\\n                                                                    { Types.col =\\n                                                                    \\\"9\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" };\\n                                                                    lo =\\n                                                                    { Types.col =\\n                                                                    \\\"0\\\";\\n                                                                    line =\\n                                                                    \\\"127\\\" } };\\n                                                                  ty =\\n                                                                  Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]}\\n                                                                  };\\n                                                                borrow_kind =\\n                                                                Types.Mut {\\n                                                                  allow_two_phase_borrow =\\n                                                                  true}};\\n                                                              hir_id =\\n                                                              (Some (\\n                                                              \\\"93\\\", \\\"40\\\"));\\n                                                              span =\\n                                                              { Types.filename =\\n                                                                (Types.Real\\n                                                                   (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                                hi =\\n                                                                { Types.col =\\n                                                                  \\\"9\\\";\\n                                                                  line =\\n                                                                  \\\"127\\\" };\\n                                                                lo =\\n                                                                { Types.col =\\n                                                                  \\\"0\\\";\\n                                                                  line =\\n                                                                  \\\"127\\\" }\\n                                                                };\\n                                                              ty =\\n                                                              (Types.Ref\\n                                                                 (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                  Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]},\\n                                                                  true))\\n                                                              }\\n                                                            ];\\n                                                          fn_span =\\n                                                          { Types.filename =\\n                                                            (Types.Real\\n                                                               (Types.LocalPath\\n                                                                  \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                            hi =\\n                                                            { Types.col = \\\"9\\\";\\n                                                              line = \\\"127\\\" };\\n                                                            lo =\\n                                                            { Types.col = \\\"0\\\";\\n                                                              line = \\\"127\\\" }\\n                                                            };\\n                                                          from_hir_call =\\n                                                          true;\\n                                                          fun' =\\n                                                          { Types.attributes =\\n                                                            [];\\n                                                            contents =\\n                                                            Types.GlobalName {\\n                                                              id =\\n                                                              { Types.krate =\\n                                                                \\\"core\\\";\\n                                                                path =\\n                                                                [{ Types.data =\\n                                                                   (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                   disambiguator =\\n                                                                   0 };\\n                                                                  { Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                  { Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"Future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                  { Types.data =\\n                                                                    (\\n                                                                    Types.ValueNs\\n                                                                    \\\"poll\\\");\\n                                                                    disambiguator =\\n                                                                    0 }\\n                                                                  ]\\n                                                                }};\\n                                                            hir_id = None;\\n                                                            span =\\n                                                            { Types.filename =\\n                                                              (Types.Real\\n                                                                 (Types.LocalPath\\n                                                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                              hi =\\n                                                              { Types.col =\\n                                                                \\\"9\\\";\\n                                                                line = \\\"127\\\"\\n                                                                };\\n                                                              lo =\\n                                                              { Types.col =\\n                                                                \\\"0\\\";\\n                                                                line = \\\"127\\\"\\n                                                                }\\n                                                              };\\n                                                            ty =\\n                                                            Types.Arrow {\\n                                                              params =\\n                                                              [Types.Adt {\\n                                                                 def_id =\\n                                                                 { Types.krate =\\n                                                                   \\\"core\\\";\\n                                                                   path =\\n                                                                   [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                   };\\n                                                                 generic_args =\\n                                                                 [(Types.Type\\n                                                                    (Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true)))\\n                                                                   ]};\\n                                                                (Types.Ref\\n                                                                   (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]}, true))\\n                                                                ];\\n                                                              ret =\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"core\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"poll\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Poll\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                [(Types.Type\\n                                                                    (\\n                                                                    Types.Alias\\n                                                                    (Types.Projection,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Output\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [(Types.Type\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })))\\n                                                                    ];\\n                                                                    trait_def_id =\\n                                                                    (Some \\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Future\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] }) })))\\n                                                                  ]}}\\n                                                            };\\n                                                          ty =\\n                                                          Types.Arrow {\\n                                                            params =\\n                                                            [Types.Adt {\\n                                                               def_id =\\n                                                               { Types.krate =\\n                                                                 \\\"core\\\";\\n                                                                 path =\\n                                                                 [{ Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                   { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Pin\\\");\\n                                                                    disambiguator =\\n                                                                    0 }\\n                                                                   ]\\n                                                                 };\\n                                                               generic_args =\\n                                                               [(Types.Type\\n                                                                   (Types.Ref\\n                                                                    (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })),\\n                                                                    true)))\\n                                                                 ]};\\n                                                              (Types.Ref\\n                                                                 (Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"},\\n                                                                  Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"wake\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Context\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    [(Types.Lifetime\\n                                                                    Types.Region {\\n                                                                    todo =\\n                                                                    \\\"ReErased\\\"})\\n                                                                    ]},\\n                                                                  true))\\n                                                              ];\\n                                                            ret =\\n                                                            Types.Adt {\\n                                                              def_id =\\n                                                              { Types.krate =\\n                                                                \\\"core\\\";\\n                                                                path =\\n                                                                [{ Types.data =\\n                                                                   (Types.TypeNs\\n                                                                    \\\"task\\\");\\n                                                                   disambiguator =\\n                                                                   0 };\\n                                                                  { Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"poll\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                  { Types.data =\\n                                                                    (\\n                                                                    Types.TypeNs\\n                                                                    \\\"Poll\\\");\\n                                                                    disambiguator =\\n                                                                    0 }\\n                                                                  ]\\n                                                                };\\n                                                              generic_args =\\n                                                              [(Types.Type\\n                                                                  (Types.Alias\\n                                                                    (Types.Projection,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Output\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [(Types.Type\\n                                                                    (Types.Alias\\n                                                                    (Types.Opaque,\\n                                                                    { Types.def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.ValueNs\\n                                                                    \\\"icrc1_transfer\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    Types.ImplTrait;\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    substs =\\n                                                                    [];\\n                                                                    trait_def_id =\\n                                                                    None })))\\n                                                                    ];\\n                                                                    trait_def_id =\\n                                                                    (Some \\n                                                                    { Types.krate =\\n                                                                    \\\"core\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"future\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Future\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] }) })))\\n                                                                ]}}};\\n                                                        hir_id =\\n                                                        (Some (\\\"93\\\", \\\"42\\\"));\\n                                                        span =\\n                                                        { Types.filename =\\n                                                          (Types.Real\\n                                                             (Types.LocalPath\\n                                                                \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                          hi =\\n                                                          { Types.col = \\\"9\\\";\\n                                                            line = \\\"127\\\" };\\n                                                          lo =\\n                                                          { Types.col = \\\"0\\\";\\n                                                            line = \\\"127\\\" }\\n                                                          };\\n                                                        ty =\\n                                                        Types.Adt {\\n                                                          def_id =\\n                                                          { Types.krate =\\n                                                            \\\"core\\\";\\n                                                            path =\\n                                                            [{ Types.data =\\n                                                               (Types.TypeNs\\n                                                                  \\\"task\\\");\\n                                                               disambiguator =\\n                                                               0 };\\n                                                              { Types.data =\\n                                                                (Types.TypeNs\\n                                                                   \\\"poll\\\");\\n                                                                disambiguator =\\n                                                                0 };\\n                                                              { Types.data =\\n                                                                (Types.TypeNs\\n                                                                   \\\"Poll\\\");\\n                                                                disambiguator =\\n                                                                0 }\\n                                                              ]\\n                                                            };\\n                                                          generic_args =\\n                                                          [(Types.Type\\n                                                              Types.Adt {\\n                                                                def_id =\\n                                                                { Types.krate =\\n                                                                  \\\"core\\\";\\n                                                                  path =\\n                                                                  [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"result\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Result\\\");\\n                                                                    disambiguator =\\n                                                                    0 }]\\n                                                                  };\\n                                                                generic_args =\\n                                                                [(Types.Type\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"candid\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []});\\n                                                                  (Types.Type\\n                                                                    Types.Adt {\\n                                                                    def_id =\\n                                                                    { Types.krate =\\n                                                                    \\\"mini_ledger\\\";\\n                                                                    path =\\n                                                                    [{ Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                    disambiguator =\\n                                                                    0 };\\n                                                                    { Types.data =\\n                                                                    (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                    disambiguator =\\n                                                                    0 }] };\\n                                                                    generic_args =\\n                                                                    []})\\n                                                                  ]})\\n                                                            ]}\\n                                                        });\\n                                                opt_destruction_scope = None;\\n                                                region_scope =\\n                                                { Types.data = Types.Node;\\n                                                  id = \\\"43\\\" };\\n                                                safety_mode =\\n                                                Types.BuiltinUnsafe;\\n                                                span =\\n                                                { Types.filename =\\n                                                  (Types.Real\\n                                                     (Types.LocalPath\\n                                                        \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                  hi =\\n                                                  { Types.col = \\\"9\\\";\\n                                                    line = \\\"127\\\" };\\n                                                  lo =\\n                                                  { Types.col = \\\"0\\\";\\n                                                    line = \\\"127\\\" }\\n                                                  };\\n                                                stmts = [];\\n                                                targeted_by_break = false};\\n                                              hir_id = (Some (\\\"93\\\", \\\"44\\\"));\\n                                              span =\\n                                              { Types.filename =\\n                                                (Types.Real\\n                                                   (Types.LocalPath\\n                                                      \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                hi =\\n                                                { Types.col = \\\"9\\\";\\n                                                  line = \\\"127\\\" };\\n                                                lo =\\n                                                { Types.col = \\\"0\\\";\\n                                                  line = \\\"127\\\" }\\n                                                };\\n                                              ty =\\n                                              Types.Adt {\\n                                                def_id =\\n                                                { Types.krate = \\\"core\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.TypeNs \\\"task\\\");\\n                                                     disambiguator = 0 };\\n                                                    { Types.data =\\n                                                      (Types.TypeNs \\\"poll\\\");\\n                                                      disambiguator = 0 };\\n                                                    { Types.data =\\n                                                      (Types.TypeNs \\\"Poll\\\");\\n                                                      disambiguator = 0 }\\n                                                    ]\\n                                                  };\\n                                                generic_args =\\n                                                [(Types.Type\\n                                                    Types.Adt {\\n                                                      def_id =\\n                                                      { Types.krate = \\\"core\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"result\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"Result\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        };\\n                                                      generic_args =\\n                                                      [(Types.Type\\n                                                          Types.Adt {\\n                                                            def_id =\\n                                                            { Types.krate =\\n                                                              \\\"candid\\\";\\n                                                              path =\\n                                                              [{ Types.data =\\n                                                                 (Types.TypeNs\\n                                                                    \\\"types\\\");\\n                                                                 disambiguator =\\n                                                                 0 };\\n                                                                { Types.data =\\n                                                                  (Types.TypeNs\\n                                                                    \\\"number\\\");\\n                                                                  disambiguator =\\n                                                                  0 };\\n                                                                { Types.data =\\n                                                                  (Types.TypeNs\\n                                                                    \\\"Nat\\\");\\n                                                                  disambiguator =\\n                                                                  0 }\\n                                                                ]\\n                                                              };\\n                                                            generic_args = []});\\n                                                        (Types.Type\\n                                                           Types.Adt {\\n                                                             def_id =\\n                                                             { Types.krate =\\n                                                               \\\"mini_ledger\\\";\\n                                                               path =\\n                                                               [{ Types.data =\\n                                                                  (Types.TypeNs\\n                                                                    \\\"endpoints\\\");\\n                                                                  disambiguator =\\n                                                                  0 };\\n                                                                 { Types.data =\\n                                                                   (Types.TypeNs\\n                                                                    \\\"TransferError\\\");\\n                                                                   disambiguator =\\n                                                                   0 }\\n                                                                 ]\\n                                                               };\\n                                                             generic_args =\\n                                                             []})\\n                                                        ]})\\n                                                  ]}\\n                                              }};\\n                                          hir_id = (Some (\\\"93\\\", \\\"57\\\"));\\n                                          span =\\n                                          { Types.filename =\\n                                            (Types.Real\\n                                               (Types.LocalPath\\n                                                  \\\"src/mini_ledger/src/main.rs\\\"));\\n                                            hi =\\n                                            { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                                            lo =\\n                                            { Types.col = \\\"0\\\"; line = \\\"127\\\" }\\n                                            };\\n                                          ty = (Types.Tuple []) };\\n                                        scope =\\n                                        { Types.data = Types.Node; id = \\\"58\\\"\\n                                          }};\\n                                      opt_destruction_scope =\\n                                      (Some { Types.data = Types.Destruction;\\n                                              id = \\\"58\\\" })\\n                                      };\\n                                     { Types.kind =\\n                                       Types.Expr {\\n                                         expr =\\n                                         { Types.attributes = [];\\n                                           contents =\\n                                           Types.Assign {\\n                                             lhs =\\n                                             { Types.attributes = [];\\n                                               contents =\\n                                               Types.VarRef {\\n                                                 id =\\n                                                 { Types.id =\\n                                                   { Types.local_id = \\\"12\\\";\\n                                                     owner =\\n                                                     { Types.krate =\\n                                                       \\\"mini_ledger\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.ValueNs\\n                                                             \\\"icrc1_transfer_9_\\\");\\n                                                          disambiguator = 0 }\\n                                                         ]\\n                                                       }\\n                                                     };\\n                                                   name = \\\"_task_context\\\" }};\\n                                               hir_id = (Some (\\\"93\\\", \\\"62\\\"));\\n                                               span =\\n                                               { Types.filename =\\n                                                 (Types.Real\\n                                                    (Types.LocalPath\\n                                                       \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                 hi =\\n                                                 { Types.col = \\\"9\\\";\\n                                                   line = \\\"127\\\" };\\n                                                 lo =\\n                                                 { Types.col = \\\"0\\\";\\n                                                   line = \\\"127\\\" }\\n                                                 };\\n                                               ty =\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"future\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"ResumeTy\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = []}\\n                                               };\\n                                             rhs =\\n                                             { Types.attributes = [];\\n                                               contents =\\n                                               Types.Yield {\\n                                                 value =\\n                                                 { Types.attributes = [];\\n                                                   contents =\\n                                                   Types.Tuple {fields = []};\\n                                                   hir_id =\\n                                                   (Some (\\\"93\\\", \\\"59\\\"));\\n                                                   span =\\n                                                   { Types.filename =\\n                                                     (Types.Real\\n                                                        (Types.LocalPath\\n                                                           \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                     hi =\\n                                                     { Types.col = \\\"9\\\";\\n                                                       line = \\\"127\\\" };\\n                                                     lo =\\n                                                     { Types.col = \\\"0\\\";\\n                                                       line = \\\"127\\\" }\\n                                                     };\\n                                                   ty = (Types.Tuple []) }};\\n                                               hir_id = (Some (\\\"93\\\", \\\"60\\\"));\\n                                               span =\\n                                               { Types.filename =\\n                                                 (Types.Real\\n                                                    (Types.LocalPath\\n                                                       \\\"src/mini_ledger/src/main.rs\\\"));\\n                                                 hi =\\n                                                 { Types.col = \\\"9\\\";\\n                                                   line = \\\"127\\\" };\\n                                                 lo =\\n                                                 { Types.col = \\\"0\\\";\\n                                                   line = \\\"127\\\" }\\n                                                 };\\n                                               ty =\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"future\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"ResumeTy\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = []}\\n                                               }};\\n                                           hir_id = (Some (\\\"93\\\", \\\"63\\\"));\\n                                           span =\\n                                           { Types.filename =\\n                                             (Types.Real\\n                                                (Types.LocalPath\\n                                                   \\\"src/mini_ledger/src/main.rs\\\"));\\n                                             hi =\\n                                             { Types.col = \\\"9\\\"; line = \\\"127\\\"\\n                                               };\\n                                             lo =\\n                                             { Types.col = \\\"0\\\"; line = \\\"127\\\"\\n                                               }\\n                                             };\\n                                           ty = (Types.Tuple []) };\\n                                         scope =\\n                                         { Types.data = Types.Node; id = \\\"64\\\"\\n                                           }};\\n                                       opt_destruction_scope =\\n                                       (Some { Types.data = Types.Destruction;\\n                                               id = \\\"64\\\" })\\n                                       }\\n                                     ];\\n                                   targeted_by_break = false};\\n                                 hir_id = None;\\n                                 span =\\n                                 { Types.filename =\\n                                   (Types.Real\\n                                      (Types.LocalPath\\n                                         \\\"src/mini_ledger/src/main.rs\\\"));\\n                                   hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                                   lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                                 ty = (Types.Tuple []) }};\\n                             hir_id = (Some (\\\"93\\\", \\\"45\\\"));\\n                             span =\\n                             { Types.filename =\\n                               (Types.Real\\n                                  (Types.LocalPath\\n                                     \\\"src/mini_ledger/src/main.rs\\\"));\\n                               hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                               lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                             ty =\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"Result\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args =\\n                               [(Types.Type\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.krate = \\\"candid\\\";\\n                                       path =\\n                                       [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"number\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []});\\n                                 (Types.Type\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.krate = \\\"mini_ledger\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"endpoints\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"TransferError\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []})\\n                                 ]}\\n                             };\\n                           guard = None;\\n                           lint_level =\\n                           (Types.Explicit\\n                              { Types.local_id = \\\"66\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                });\\n                           pattern =\\n                           { Types.attributes = [];\\n                             contents =\\n                             Types.Binding {is_primary = true;\\n                               mode = Types.ByValue; mutability = true;\\n                               subpattern = None;\\n                               ty =\\n                               (Types.Alias\\n                                  (Types.Opaque,\\n                                   { Types.def_id =\\n                                     { Types.krate = \\\"mini_ledger\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data = Types.ImplTrait;\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     substs = []; trait_def_id = None }));\\n                               var =\\n                               { Types.id =\\n                                 { Types.local_id = \\\"31\\\";\\n                                   owner =\\n                                   { Types.krate = \\\"mini_ledger\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     }\\n                                   };\\n                                 name = \\\"__awaitee\\\" }};\\n                             hir_id = None;\\n                             span =\\n                             { Types.filename =\\n                               (Types.Real\\n                                  (Types.LocalPath\\n                                     \\\"src/mini_ledger/src/main.rs\\\"));\\n                               hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                               lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                             ty =\\n                             (Types.Alias\\n                                (Types.Opaque,\\n                                 { Types.def_id =\\n                                   { Types.krate = \\\"mini_ledger\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = Types.ImplTrait;\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   substs = []; trait_def_id = None }))\\n                             };\\n                           scope = { Types.data = Types.Node; id = \\\"66\\\" };\\n                           span =\\n                           { Types.filename =\\n                             (Types.Real\\n                                (Types.LocalPath\\n                                   \\\"src/mini_ledger/src/main.rs\\\"));\\n                             hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                             lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } }\\n                           }\\n                          ];\\n                        scrutinee =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.Call {\\n                            args =\\n                            [{ Types.attributes = [];\\n                               contents =\\n                               Types.Call {\\n                                 args =\\n                                 [{ Types.attributes = [];\\n                                    contents =\\n                                    Types.VarRef {\\n                                      id =\\n                                      { Types.id =\\n                                        { Types.local_id = \\\"22\\\";\\n                                          owner =\\n                                          { Types.krate = \\\"mini_ledger\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.ValueNs\\n                                                  \\\"icrc1_transfer_9_\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            }\\n                                          };\\n                                        name = \\\"arg\\\" }};\\n                                    hir_id = (Some (\\\"93\\\", \\\"29\\\"));\\n                                    span =\\n                                    { Types.filename =\\n                                      (Types.Real\\n                                         (Types.LocalPath\\n                                            \\\"src/mini_ledger/src/main.rs\\\"));\\n                                      hi = { Types.col = \\\"27\\\"; line = \\\"129\\\" };\\n                                      lo = { Types.col = \\\"24\\\"; line = \\\"129\\\" }\\n                                      };\\n                                    ty =\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.krate = \\\"mini_ledger\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"endpoints\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"TransferArg\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []}\\n                                    }\\n                                   ];\\n                                 fn_span =\\n                                 { Types.filename =\\n                                   (Types.Real\\n                                      (Types.LocalPath\\n                                         \\\"src/mini_ledger/src/main.rs\\\"));\\n                                   hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                                   lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                                 from_hir_call = true;\\n                                 fun' =\\n                                 { Types.attributes = [];\\n                                   contents =\\n                                   Types.GlobalName {\\n                                     id =\\n                                     { Types.krate = \\\"mini_ledger\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       }};\\n                                   hir_id = None;\\n                                   span =\\n                                   { Types.filename =\\n                                     (Types.Real\\n                                        (Types.LocalPath\\n                                           \\\"src/mini_ledger/src/main.rs\\\"));\\n                                     hi = { Types.col = \\\"23\\\"; line = \\\"129\\\" };\\n                                     lo = { Types.col = \\\"9\\\"; line = \\\"129\\\" } };\\n                                   ty =\\n                                   Types.Arrow {\\n                                     params =\\n                                     [Types.Adt {\\n                                        def_id =\\n                                        { Types.krate = \\\"mini_ledger\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"endpoints\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"TransferArg\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []}\\n                                       ];\\n                                     ret =\\n                                     (Types.Alias\\n                                        (Types.Opaque,\\n                                         { Types.def_id =\\n                                           { Types.krate = \\\"mini_ledger\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.ValueNs\\n                                                   \\\"icrc1_transfer\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data = Types.ImplTrait;\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           substs = []; trait_def_id = None }))}\\n                                   };\\n                                 ty =\\n                                 Types.Arrow {\\n                                   params =\\n                                   [Types.Adt {\\n                                      def_id =\\n                                      { Types.krate = \\\"mini_ledger\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"endpoints\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"TransferArg\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []}\\n                                     ];\\n                                   ret =\\n                                   (Types.Alias\\n                                      (Types.Opaque,\\n                                       { Types.def_id =\\n                                         { Types.krate = \\\"mini_ledger\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data = Types.ImplTrait;\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         substs = []; trait_def_id = None }))}};\\n                               hir_id = (Some (\\\"93\\\", \\\"26\\\"));\\n                               span =\\n                               { Types.filename =\\n                                 (Types.Real\\n                                    (Types.LocalPath\\n                                       \\\"src/mini_ledger/src/main.rs\\\"));\\n                                 hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                                 lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                               ty =\\n                               (Types.Alias\\n                                  (Types.Opaque,\\n                                   { Types.def_id =\\n                                     { Types.krate = \\\"mini_ledger\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data = Types.ImplTrait;\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     substs = []; trait_def_id = None }))\\n                               }\\n                              ];\\n                            fn_span =\\n                            { Types.filename =\\n                              (Types.Real\\n                                 (Types.LocalPath\\n                                    \\\"src/mini_ledger/src/main.rs\\\"));\\n                              hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                              lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                            from_hir_call = true;\\n                            fun' =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.GlobalName {\\n                                id =\\n                                { Types.krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data =\\n                                      (Types.TypeNs \\\"into_future\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data =\\n                                      (Types.TypeNs \\\"IntoFuture\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data =\\n                                      (Types.ValueNs \\\"into_future\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  }};\\n                              hir_id = None;\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"src/mini_ledger/src/main.rs\\\"));\\n                                hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                                lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                              ty =\\n                              Types.Arrow {\\n                                params =\\n                                [(Types.Alias\\n                                    (Types.Opaque,\\n                                     { Types.def_id =\\n                                       { Types.krate = \\\"mini_ledger\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data = Types.ImplTrait;\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       substs = []; trait_def_id = None }))\\n                                  ];\\n                                ret =\\n                                (Types.Alias\\n                                   (Types.Projection,\\n                                    { Types.def_id =\\n                                      { Types.krate = \\\"core\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"future\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"into_future\\\");\\n                                            disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"IntoFuture\\\");\\n                                            disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"IntoFuture\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      substs =\\n                                      [(Types.Type\\n                                          (Types.Alias\\n                                             (Types.Opaque,\\n                                              { Types.def_id =\\n                                                { Types.krate = \\\"mini_ledger\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.ValueNs\\n                                                        \\\"icrc1_transfer\\\");\\n                                                     disambiguator = 0 };\\n                                                    { Types.data =\\n                                                      Types.ImplTrait;\\n                                                      disambiguator = 0 }\\n                                                    ]\\n                                                  };\\n                                                substs = [];\\n                                                trait_def_id = None })))\\n                                        ];\\n                                      trait_def_id =\\n                                      (Some { Types.krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"future\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"into_future\\\");\\n                                                  disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"IntoFuture\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              })\\n                                      }))}\\n                              };\\n                            ty =\\n                            Types.Arrow {\\n                              params =\\n                              [(Types.Alias\\n                                  (Types.Opaque,\\n                                   { Types.def_id =\\n                                     { Types.krate = \\\"mini_ledger\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data = Types.ImplTrait;\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     substs = []; trait_def_id = None }))\\n                                ];\\n                              ret =\\n                              (Types.Alias\\n                                 (Types.Projection,\\n                                  { Types.def_id =\\n                                    { Types.krate = \\\"core\\\";\\n                                      path =\\n                                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"into_future\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"IntoFuture\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"IntoFuture\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    substs =\\n                                    [(Types.Type\\n                                        (Types.Alias\\n                                           (Types.Opaque,\\n                                            { Types.def_id =\\n                                              { Types.krate = \\\"mini_ledger\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.ValueNs\\n                                                      \\\"icrc1_transfer\\\");\\n                                                   disambiguator = 0 };\\n                                                  { Types.data =\\n                                                    Types.ImplTrait;\\n                                                    disambiguator = 0 }\\n                                                  ]\\n                                                };\\n                                              substs = [];\\n                                              trait_def_id = None })))\\n                                      ];\\n                                    trait_def_id =\\n                                    (Some { Types.krate = \\\"core\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"future\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"into_future\\\");\\n                                                disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"IntoFuture\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            })\\n                                    }))}};\\n                          hir_id = (Some (\\\"93\\\", \\\"68\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                          ty =\\n                          (Types.Alias\\n                             (Types.Opaque,\\n                              { Types.def_id =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"icrc1_transfer\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = Types.ImplTrait;\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                substs = []; trait_def_id = None }))\\n                          }};\\n                      hir_id = (Some (\\\"93\\\", \\\"25\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Result\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"candid\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"number\\\");\\n                                    disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []});\\n                          (Types.Type\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data =\\n                                     (Types.TypeNs \\\"TransferError\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []})\\n                          ]}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"69\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Result\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args =\\n                    [(Types.Type\\n                        Types.Adt {\\n                          def_id =\\n                          { Types.krate = \\\"candid\\\";\\n                            path =\\n                            [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                               disambiguator = 0 };\\n                              { Types.data = (Types.TypeNs \\\"number\\\");\\n                                disambiguator = 0 };\\n                              { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                                disambiguator = 0 }\\n                              ]\\n                            };\\n                          generic_args = []});\\n                      (Types.Type\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"TransferError\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []})\\n                      ]};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"70\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"result\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"Result\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args =\\n                  [(Types.Type\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"candid\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"types\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"number\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Nat\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []});\\n                    (Types.Type\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.krate = \\\"mini_ledger\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"TransferError\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args = []})\\n                    ]}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"80\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"24\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"93\\\", \\\"81\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type\\n                (Types.Todo\\n                   \\\"GeneratorWitness(Binder([std::future::ResumeTy, mini_ledger::endpoints::TransferArg, impl std::future::Future<Output = std::result::Result<candid::Nat, mini_ledger::endpoints::TransferError>>, ()], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"93\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"9\\\"; line = \\\"127\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"127\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"icrc1_transfer_9_\\\");\\n           disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type\\n           (Types.Todo\\n              \\\"GeneratorWitness(Binder([std::future::ResumeTy, mini_ledger::endpoints::TransferArg, impl std::future::Future<Output = std::result::Result<candid::Nat, mini_ledger::endpoints::TransferError>>, ()], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let get_transactions_10__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data = (Types.ValueNs \\\"get_transactions_10_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"31\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs \\\"get_transactions_10_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"99\\\", \\\"39\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data =\\n                                  (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"99\\\", \\\"38\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                disambiguator = 0 };\\n                               { Types.data =\\n                                 (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data =\\n                                   (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                disambiguator = 0 };\\n                               { Types.data =\\n                                 (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"99\\\", \\\"32\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"41\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                         ty =\\n                         Types.Arrow {params = [];\\n                           ret =\\n                           (Types.Tuple\\n                              [Types.Adt {\\n                                 def_id =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data =\\n                                       (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []}\\n                                ])}\\n                         };\\n                       ty =\\n                       Types.Arrow {params = [];\\n                         ret =\\n                         (Types.Tuple\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data =\\n                                     (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ])}};\\n                     hir_id = (Some (\\\"99\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"mini_ledger\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                disambiguator = 0 };\\n                               { Types.data =\\n                                 (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.ValueNs \\\"get_transactions_10_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents =\\n               Types.Tuple {\\n                 subpatterns =\\n                 [{ Types.attributes = [];\\n                    contents =\\n                    Types.Binding {is_primary = true; mode = Types.ByValue;\\n                      mutability = false; subpattern = None;\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"mini_ledger\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                             disambiguator = 0 };\\n                            { Types.data =\\n                              (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []};\\n                      var =\\n                      { Types.id =\\n                        { Types.local_id = \\\"22\\\";\\n                          owner =\\n                          { Types.krate = \\\"mini_ledger\\\";\\n                            path =\\n                            [{ Types.data =\\n                               (Types.ValueNs \\\"get_transactions_10_\\\");\\n                               disambiguator = 0 }\\n                              ]\\n                            }\\n                          };\\n                        name = \\\"req\\\" }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"23\\\"; line = \\\"209\\\" };\\n                      lo = { Types.col = \\\"20\\\"; line = \\\"209\\\" } };\\n                    ty =\\n                    Types.Adt {\\n                      def_id =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                           disambiguator = 0 };\\n                          { Types.data =\\n                            (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args = []}\\n                    }\\n                   ]};\\n               hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n               ty =\\n               (Types.Tuple\\n                  [Types.Adt {\\n                     def_id =\\n                     { Types.krate = \\\"mini_ledger\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                          disambiguator = 0 };\\n                         { Types.data =\\n                           (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                           disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []}\\n                    ])\\n               };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"41\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"24\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {\\n                        args =\\n                        [{ Types.attributes = [];\\n                           contents =\\n                           Types.VarRef {\\n                             id =\\n                             { Types.id =\\n                               { Types.local_id = \\\"22\\\";\\n                                 owner =\\n                                 { Types.krate = \\\"mini_ledger\\\";\\n                                   path =\\n                                   [{ Types.data =\\n                                      (Types.ValueNs \\\"get_transactions_10_\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   }\\n                                 };\\n                               name = \\\"req\\\" }};\\n                           hir_id = (Some (\\\"99\\\", \\\"28\\\"));\\n                           span =\\n                           { Types.filename =\\n                             (Types.Real\\n                                (Types.LocalPath\\n                                   \\\"src/mini_ledger/src/main.rs\\\"));\\n                             hi = { Types.col = \\\"23\\\"; line = \\\"209\\\" };\\n                             lo = { Types.col = \\\"20\\\"; line = \\\"209\\\" } };\\n                           ty =\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data =\\n                                   (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                           }\\n                          ];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.ValueNs \\\"get_transactions\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"19\\\"; line = \\\"209\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"209\\\" } };\\n                          ty =\\n                          Types.Arrow {\\n                            params =\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.krate = \\\"mini_ledger\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data =\\n                                     (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []}\\n                              ];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"mini_ledger\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data =\\n                                    (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []}}\\n                          };\\n                        ty =\\n                        Types.Arrow {\\n                          params =\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"mini_ledger\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data =\\n                                   (Types.TypeNs \\\"GetTransactionsRequest\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data =\\n                                  (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}}};\\n                      hir_id = (Some (\\\"99\\\", \\\"25\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"mini_ledger\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                             disambiguator = 0 };\\n                            { Types.data =\\n                              (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"30\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data = (Types.ValueNs \\\"get_transactions_10_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"mini_ledger\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                         disambiguator = 0 };\\n                        { Types.data =\\n                          (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"31\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data =\\n                           (Types.ValueNs \\\"get_transactions_10_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"endpoints\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"GetTransactionsResponse\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"41\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"24\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"99\\\", \\\"42\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data = (Types.ValueNs \\\"get_transactions_10_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data = (Types.ValueNs \\\"get_transactions_10_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data =\\n                           (Types.ValueNs \\\"get_transactions_10_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"99\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"207\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"207\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"get_transactions_10_\\\");\\n           disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let get_transactions (req: Mini_ledger.Endpoints.t_GetTransactionsRequest)
    : Mini_ledger.Endpoints.t_GetTransactionsResponse =
  let start, length:(u64 & usize) =
    Core.Result.unwrap_or_else_under_impl (Mini_ledger.Endpoints.as_start_and_length_under_impl_2 req

        <:
        Core.Result.t_Result (u64 & usize) Alloc.String.t_String)
      (fun msg ->
          Rust_primitives.Hax.never_to_any (Ic_cdk.Api.trap (Core.Ops.Deref.Deref.deref msg
                  <:
                  string)
              <:
              Rust_primitives.Hax.t_Never)
          <:
          (u64 & usize))
  in
  Mini_ledger.LedgerAccess.with_ledger (fun ledger ->
        get_transactions_under_impl_7 ledger start length
        <:
        Mini_ledger.Endpoints.t_GetTransactionsResponse)

let v___export_service: Alloc.String.t_String =
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let env:Candid.Types.Internal.t_TypeContainer = Candid.Types.Internal.new_under_impl_3 in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist1:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist2:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 args hoist1
  in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist2 in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist3:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist4:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist3
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist4 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "get_transactions" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist5:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist6:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 args hoist5
  in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist6 in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist7:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist8:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist7
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist8 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_balance_of" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist9:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist10:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist9
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist10 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_decimals" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist11:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist12:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist11
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist12 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_fee" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist13:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist14:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist13
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist14 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_minting_account" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist15:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist16:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist15
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist16 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_name" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist17:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist18:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist17
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist18 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes
      =
      Alloc.Slice.into_vec_under_impl (Rust_primitives.unsize (Rust_primitives.Hax.box_new
              <:
              Alloc.Boxed.t_Box (array Candid.Parser.Types.t_FuncMode 1sz) Alloc.Alloc.t_Global)
          <:
          Alloc.Boxed.t_Box (slice Candid.Parser.Types.t_FuncMode) Alloc.Alloc.t_Global)
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_symbol" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist19:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist20:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 args hoist19
  in
  let args:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist20 in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.new_under_impl
  in
  let tmp0, out:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) =
    Candid.Types.Internal.add_under_impl_3 env
  in
  let env:Candid.Types.Internal.t_TypeContainer = tmp0 in
  let hoist21:(Candid.Types.Internal.t_TypeContainer & Candid.Types.Internal.t_Type) = out in
  let hoist22:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 rets hoist21
  in
  let rets:Alloc.Vec.t_Vec Candid.Types.Internal.t_Type Alloc.Alloc.t_Global = hoist22 in
  let func:Candid.Types.Internal.t_Function =
    {
      Candid.Types.Internal.Function.f_args = args;
      Candid.Types.Internal.Function.f_rets = rets;
      Candid.Types.Internal.Function.f_modes = Alloc.Vec.new_under_impl
    }
  in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Alloc.Vec.push_under_impl_1 service
      ((Alloc.String.ToString.to_string "icrc1_transfer" <: Alloc.String.t_String),
        Candid.Types.Internal.Type_Func func)
  in
  let _:Prims.unit = () in
  let service:Alloc.Vec.t_Vec (Alloc.String.t_String & Candid.Types.Internal.t_Type)
    Alloc.Alloc.t_Global =
    Core.Slice.sort_unstable_by_key_under_impl service
      (fun (name, _) -> Core.Clone.Clone.clone name <: Alloc.String.t_String)
  in
  let ty:Candid.Types.Internal.t_Type = Candid.Types.Internal.Type_Service service in
  let actor:Core.Option.t_Option Candid.Types.Internal.t_Type = Core.Option.Option_Some ty in
  let result:Alloc.String.t_String =
    Candid.Bindings.Candid.compile env.Candid.Types.Internal.TypeContainer.f_env actor
  in
  Alloc.Fmt.format (Core.Fmt.new_v1_under_impl_2 (Rust_primitives.unsize (let list = [""] in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
              Rust_primitives.Hax.array_of_list list)
          <:
          slice string)
        (Rust_primitives.unsize (let list =
                [Core.Fmt.Rt.new_display_under_impl_1 result <: Core.Fmt.Rt.t_Argument]
              in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
              Rust_primitives.Hax.array_of_list list)
          <:
          slice Core.Fmt.Rt.t_Argument)
      <:
      Core.Fmt.t_Arguments)

let v___get_candid_interface_tmp_hack_11__: Prims.unit =
  let _:Prims.unit = Ic_cdk.setup in
  let _:Prims.unit =
    Rust_primitives.Hax.failure ""
      "rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.GlobalName {\\n    id =\\n    { Types.krate = \\\"ic_cdk\\\";\\n      path = [{ Types.data = (Types.ValueNs \\\"spawn\\\"); disambiguator = 0 }] }};\\n  hir_id = None;\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n  ty =\\n  Types.Arrow {\\n    params =\\n    [(Types.Generator\\n        ({ Types.krate = \\\"mini_ledger\\\";\\n           path =\\n           [{ Types.data =\\n              (Types.ValueNs \\\"__get_candid_interface_tmp_hack_11_\\\");\\n              disambiguator = 0 };\\n             { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n           },\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                     disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args = []});\\n           (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n           (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n           (Types.Type (Types.Tuple []))],\\n         Types.Static))\\n      ];\\n    ret = (Types.Tuple [])}\\n  }\")(rust_primitives::hax::failure(\"\",\"{ Types.attributes = [];\\n  contents =\\n  Types.Closure {\\n    body =\\n    { Types.attributes = [];\\n      contents =\\n      Types.Block {\\n        expr =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Call {\\n                  args =\\n                  [{ Types.attributes = [];\\n                     contents =\\n                     Types.Tuple {\\n                       fields =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"28\\\";\\n                                owner =\\n                                { Types.krate = \\\"mini_ledger\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.ValueNs\\n                                        \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"result\\\" }};\\n                          hir_id = (Some (\\\"110\\\", \\\"36\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                            lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"String\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}\\n                          }\\n                         ]};\\n                     hir_id = (Some (\\\"110\\\", \\\"35\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                     ty =\\n                     (Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"alloc\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"String\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                     }\\n                    ];\\n                  fn_span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                    hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                    lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                  from_hir_call = true;\\n                  fun' =\\n                  { Types.attributes = [];\\n                    contents =\\n                    Types.GlobalName {\\n                      id =\\n                      { Types.krate = \\\"ic_cdk\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"call\\\");\\n                            disambiguator = 0 };\\n                          { Types.data = (Types.ValueNs \\\"reply\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        }};\\n                    hir_id = None;\\n                    span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                      hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                      lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                    ty =\\n                    Types.Arrow {\\n                      params =\\n                      [(Types.Tuple\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.krate = \\\"alloc\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"String\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []}\\n                            ])\\n                        ];\\n                      ret = (Types.Tuple [])}\\n                    };\\n                  ty =\\n                  Types.Arrow {\\n                    params =\\n                    [(Types.Tuple\\n                        [Types.Adt {\\n                           def_id =\\n                           { Types.krate = \\\"alloc\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"String\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []}\\n                          ])\\n                      ];\\n                    ret = (Types.Tuple [])}};\\n                hir_id = (Some (\\\"110\\\", \\\"29\\\"));\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                ty = (Types.Tuple []) });\\n        opt_destruction_scope = None;\\n        region_scope = { Types.data = Types.Node; id = \\\"38\\\" };\\n        safety_mode = Types.Safe;\\n        span =\\n        { Types.filename =\\n          (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n          hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n          lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n        stmts =\\n        [{ Types.kind =\\n           Types.Let {attributes = []; else_block = None;\\n             init_scope = { Types.data = Types.Node; id = \\\"14\\\" };\\n             initializer' =\\n             (Some { Types.attributes = [];\\n                     contents =\\n                     Types.Call {args = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                         hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                         lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.krate = \\\"ic_cdk\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"api\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"call\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.ValueNs \\\"arg_data\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                           hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                           lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                         ty =\\n                         Types.Arrow {params = []; ret = (Types.Tuple [])} };\\n                       ty = Types.Arrow {params = []; ret = (Types.Tuple [])}};\\n                     hir_id = (Some (\\\"110\\\", \\\"15\\\"));\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                       hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                       lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                     ty = (Types.Tuple []) });\\n             lint_level =\\n             (Types.Explicit\\n                { Types.local_id = \\\"21\\\";\\n                  owner =\\n                  { Types.krate = \\\"mini_ledger\\\";\\n                    path =\\n                    [{ Types.data =\\n                       (Types.ValueNs \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    }\\n                  });\\n             pattern =\\n             { Types.attributes = [];\\n               contents = Types.Tuple {subpatterns = []}; hir_id = None;\\n               span =\\n               { Types.filename =\\n                 (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                 hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                 lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n               ty = (Types.Tuple []) };\\n             remainder_scope =\\n             { Types.data = (Types.Remainder \\\"0\\\"); id = \\\"38\\\" }};\\n           opt_destruction_scope =\\n           (Some { Types.data = Types.Destruction; id = \\\"14\\\" }) };\\n          { Types.kind =\\n            Types.Let {attributes = []; else_block = None;\\n              init_scope = { Types.data = Types.Node; id = \\\"23\\\" };\\n              initializer' =\\n              (Some { Types.attributes = [];\\n                      contents =\\n                      Types.Call {args = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                          hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                          lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.krate = \\\"mini_ledger\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.ValueNs\\n                                    \\\"__get_candid_interface_tmp_hack\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                            hi = { Types.col = \\\"34\\\"; line = \\\"219\\\" };\\n                            lo = { Types.col = \\\"3\\\"; line = \\\"219\\\" } };\\n                          ty =\\n                          Types.Arrow {params = [];\\n                            ret =\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.krate = \\\"alloc\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"String\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []}}\\n                          };\\n                        ty =\\n                        Types.Arrow {params = [];\\n                          ret =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"String\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []}}};\\n                      hir_id = (Some (\\\"110\\\", \\\"24\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                        hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                        lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.krate = \\\"alloc\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"String\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []}\\n                      });\\n              lint_level =\\n              (Types.Explicit\\n                 { Types.local_id = \\\"27\\\";\\n                   owner =\\n                   { Types.krate = \\\"mini_ledger\\\";\\n                     path =\\n                     [{ Types.data =\\n                        (Types.ValueNs \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                        disambiguator = 0 }\\n                       ]\\n                     }\\n                   });\\n              pattern =\\n              { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = false; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"alloc\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"String\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"28\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data =\\n                           (Types.ValueNs\\n                              \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"result\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"alloc\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"string\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"String\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                };\\n              remainder_scope =\\n              { Types.data = (Types.Remainder \\\"1\\\"); id = \\\"38\\\" }};\\n            opt_destruction_scope =\\n            (Some { Types.data = Types.Destruction; id = \\\"23\\\" }) }\\n          ];\\n        targeted_by_break = false};\\n      hir_id = (Some (\\\"110\\\", \\\"39\\\"));\\n      span =\\n      { Types.filename =\\n        (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n        hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n        lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n      ty = (Types.Tuple []) };\\n    movability = (Some Types.Static);\\n    params =\\n    [{ Types.attributes = []; hir_id = None; pat = None; self_kind = None;\\n       ty =\\n       (Types.Generator\\n          ({ Types.krate = \\\"mini_ledger\\\";\\n             path =\\n             [{ Types.data =\\n                (Types.ValueNs \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                disambiguator = 0 };\\n               { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n             },\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                       disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []});\\n             (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n             (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n             (Types.Type (Types.Tuple []))],\\n           Types.Static));\\n       ty_span = None };\\n      { Types.attributes = [];\\n        hir_id =\\n        (Some { Types.local_id = \\\"13\\\";\\n                owner =\\n                { Types.krate = \\\"mini_ledger\\\";\\n                  path =\\n                  [{ Types.data =\\n                     (Types.ValueNs \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                     disambiguator = 0 }\\n                    ]\\n                  }\\n                });\\n        pat =\\n        (Some { Types.attributes = [];\\n                contents =\\n                Types.Binding {is_primary = true; mode = Types.ByValue;\\n                  mutability = true; subpattern = None;\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args = []};\\n                  var =\\n                  { Types.id =\\n                    { Types.local_id = \\\"12\\\";\\n                      owner =\\n                      { Types.krate = \\\"mini_ledger\\\";\\n                        path =\\n                        [{ Types.data =\\n                           (Types.ValueNs\\n                              \\\"__get_candid_interface_tmp_hack_11_\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        }\\n                      };\\n                    name = \\\"_task_context\\\" }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                  hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                  lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n                ty =\\n                Types.Adt {\\n                  def_id =\\n                  { Types.krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"future\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"ResumeTy\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []}\\n                });\\n        self_kind = None;\\n        ty =\\n        Types.Adt {\\n          def_id =\\n          { Types.krate = \\\"core\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }]\\n            };\\n          generic_args = []};\\n        ty_span =\\n        (Some { Types.filename =\\n                (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n                hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n                lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } })\\n        }\\n      ];\\n    upvars = []};\\n  hir_id = (Some (\\\"110\\\", \\\"10\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"src/mini_ledger/src/main.rs\\\"));\\n    hi = { Types.col = \\\"8\\\"; line = \\\"218\\\" };\\n    lo = { Types.col = \\\"0\\\"; line = \\\"218\\\" } };\\n  ty =\\n  (Types.Generator\\n     ({ Types.krate = \\\"mini_ledger\\\";\\n        path =\\n        [{ Types.data = (Types.ValueNs \\\"__get_candid_interface_tmp_hack_11_\\\");\\n           disambiguator = 0 };\\n          { Types.data = Types.ClosureExpr; disambiguator = 0 }]\\n        },\\n      [(Types.Type\\n          Types.Adt {\\n            def_id =\\n            { Types.krate = \\\"core\\\";\\n              path =\\n              [{ Types.data = (Types.TypeNs \\\"future\\\"); disambiguator = 0 };\\n                { Types.data = (Types.TypeNs \\\"ResumeTy\\\"); disambiguator = 0 }\\n                ]\\n              };\\n            generic_args = []});\\n        (Types.Type (Types.Tuple [])); (Types.Type (Types.Tuple []));\\n        (Types.Type (Types.Todo \\\"GeneratorWitness(Binder([], []))\\\"));\\n        (Types.Type (Types.Tuple []))],\\n      Types.Static))\\n  }\"))"

  in
  ()

let v___get_candid_interface_tmp_hack: Alloc.String.t_String = v___export_service

let main: Prims.unit = ()